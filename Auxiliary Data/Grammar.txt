<program> -> <globaldefines> <fndefines> <statements>

<globaldefines> -> <globaldefine> TK_NEWLINE <globaldefines> | e 

<globaldefine> -> TK_GLOBAL <defineargs>

<definestmt> -> TK_DEFINE <defineargs>

<defineargs> -> <datatype> <identifier> <moreidens>

<moreidens> -> TK_COMMA <identifier> <moreidens> | e

<letstmt> -> TK_LET <assignable> TK_BE <equatable>

<assignable> -> <identifier> <assignable1>

<assignable1> -> TK_MEMBEROP <endassignable> | e

<endassignable> -> <primitivetype> | TK_ROOT <primitiveval> | TK_SOURCE <primitiveval> | TK_DEST <primitiveval> | TK_WEIGHT

<primitiveval> -> TK_MEMBEROP <primitivetype> | e

<datatype> -> <primitivetype> | <complextype>

<primitivetype> -> TK_INT | TK_FLOAT | TK_STRING

<complextype> -> TK_VERTEX | TK_EDGE | TK_GRAPH | TK_TREE

<equatable> -> TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN | <exp>

<fndefines> -> TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> | e

<paramlist> -> <params> | e

<params> -> <param> <moreparams>

<moreparams> -> TK_COMMA <params> | e

<param> -> <datatype> <identifier>

<returntype> -> <datatype> | TK_NOTHING

<fnbody> -> TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END

<returnable> -> <equatable> | TK_NOTHING

<statements> -> <possiblestmts> <statements> | e

<possiblestmts> -> <validstatement> TK_NEWLINE | <validconditional>

<validstatement> -> <definestmt> | <letstmt> | <iteration> | <input> | <output> | <funcstmt> | <breakstmt>

<breakstmt> -> TK_BREAK

<returnstmt> -> TK_RETURN <returnable>

<validconditional> -> <ifblock> TK_NEWLINE <elseifblock>

<ifblock> -> <ifstmt> TK_COLON <block>

<elseifblock> -> TK_ELSE <elseifblock1> | e

<elseifblock1> -> <validconditional> | TK_COLON <block> TK_NEWLINE

<block> -> TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END

<ifstmt> -> TK_IF <boolexp>

<boolexp> -> <expor> <boolexp1>

<boolexp1> -> TK_OR <boolexp> | e

<expor> -> <expand> <expor1>

<expor1> -> TK_AND <expor> | e

<expand> -> TK_NOT <expand> | <expnot>

<expnot> -> <boolresult> | TK_CURLYOPENPAREN <boolexp> TK_CURLYCLOSEPAREN

<boolresult> -> <exp> <relop> <exp>

<relop> -> TK_GT | TK_LT | TK_GTE | TK_LTE | TK_EQ

<exp> -> <mulexp> <exp1>

<exp1> -> TK_MINUS <exp> | TK_PLUS <exp> | e

<mulexp> -> <modexp> <mulexp1>

<mulexp1> -> TK_MUL <mulexp> | TK_DIV <mulexp> | e

<modexp> -> <baseexp> <modexp1> | TK_OPENPAREN <exp> TK_CLOSEPAREN

<modexp1> -> TK_MODULO <modexp> | e

<baseexp> -> <assignorfunc> | <literal> | TK_DEPTH

<assignorfunc> -> <identifier> <assignorfunc1>

<assignorfunc1> -> <assignable1> | <funcstmt1>

<funcstmt> -> <identifier> <funcstmt1> 

<funcstmt1> -> TK_OPENPAREN <passedparams> TK_CLOSEPAREN

<passedparams> -> <assignable> <morepassed> | e

<morepassed> -> TK_COMMA <assignable> <morepassed> | e

<input> -> TK_READ TK_OPENPAREN <assignable> TK_CLOSEPAREN

<output> -> TK_PRINT TK_OPENPAREN <printable> TK_CLOSEPAREN

<printable> -> <assignable> | <literal>

<iteration> -> TK_FOR <loop> TK_COLON <block>

<loop> -> <identifier> <loop1> | <literal> TK_ITERATIONS

<loop1> -> TK_ITERATIONS | TK_IN <iterable>

<iterable> -> <identifier> <iterable1> | <iterop> <operatorparams>

<iterop> -> TK_BFT | TK_DFT

<operatorparams> -> TK_OPENPAREN <identifier> TK_COMMA <identifier> TK_CLOSEPAREN

<iterable1> -> TK_ADJACENT TK_TO <assignable> | e

<literal> -> TK_INTLIT | TK_FLOATLIT | TK_STRINGLIT

<identifier> -> TK_IDEN
