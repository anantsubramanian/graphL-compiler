<program> 
<globaldefines> <fndefines> <statements> 
<globaldefine> TK_NEWLINE <globaldefines> 
TK_GLOBAL <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_TREE 
<TK_IDEN,T,1> 
e 
<globaldefine> TK_NEWLINE <globaldefines> 
TK_GLOBAL <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_VERTEX 
<TK_IDEN,u,2> 
e 
<globaldefine> TK_NEWLINE <globaldefines> 
TK_GLOBAL <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_EDGE 
<TK_IDEN,e1,3> 
e 
<globaldefine> TK_NEWLINE <globaldefines> 
TK_GLOBAL <defineargs> 
<datatype> <identifier> <moreidens> 
<primitivetype> 
TK_INT 
<TK_IDEN,v,4> 
e 
e 
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 
<TK_IDEN,edgeWeight1,6> 
e 
TK_NOTHING 
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<primitivetype> 
TK_INT 
<TK_IDEN,answer,9> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_VERTEX 
<TK_IDEN,z,10> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,v,11> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<literal> 
<TK_INTLIT,5,11> 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,13> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,13> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,13> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,15> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,15> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,15> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,17> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,17> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,z,19> 
TK_MEMBEROP <endassignable> 
<primitivetype> 
TK_INT 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,19> 
e 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<breakstmt> 
TK_BREAK 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,25> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,25> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,25> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,27> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,27> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,27> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
TK_NOT <expand> 
<expnot> 
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,29> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,29> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,answer,31> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,31> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_RETURN <returnable> 
TK_NOTHING 
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 
<TK_IDEN,edgeWeight2,40> 
e 
TK_NOTHING 
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<primitivetype> 
TK_INT 
<TK_IDEN,answer,43> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_VERTEX 
<TK_IDEN,z,44> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,v,45> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<literal> 
<TK_INTLIT,5,45> 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,47> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,47> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,47> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,49> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,49> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,49> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,51> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,51> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,z,53> 
TK_MEMBEROP <endassignable> 
<primitivetype> 
TK_INT 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,53> 
e 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<breakstmt> 
TK_BREAK 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,59> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,59> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,59> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,61> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,61> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,61> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
TK_NOT <expand> 
<expnot> 
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,63> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,63> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,answer,65> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,65> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_RETURN <returnable> 
TK_NOTHING 
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 
<TK_IDEN,edgeWeight3,74> 
e 
TK_NOTHING 
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<primitivetype> 
TK_INT 
<TK_IDEN,answer,77> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_VERTEX 
<TK_IDEN,z,78> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,v,79> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<literal> 
<TK_INTLIT,5,79> 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,81> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,81> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,81> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,83> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,83> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,83> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,85> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,85> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,z,87> 
TK_MEMBEROP <endassignable> 
<primitivetype> 
TK_INT 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,87> 
e 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<breakstmt> 
TK_BREAK 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,93> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,93> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,93> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,95> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,95> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,95> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
TK_NOT <expand> 
<expnot> 
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,97> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,97> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,answer,99> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,99> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_RETURN <returnable> 
TK_NOTHING 
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 
<TK_IDEN,edgeWeight4,108> 
e 
TK_NOTHING 
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<primitivetype> 
TK_INT 
<TK_IDEN,answer,111> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_VERTEX 
<TK_IDEN,z,112> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,v,113> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<literal> 
<TK_INTLIT,5,113> 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,115> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,115> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,115> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,117> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,117> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,117> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,119> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,119> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,z,121> 
TK_MEMBEROP <endassignable> 
<primitivetype> 
TK_INT 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,121> 
e 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<breakstmt> 
TK_BREAK 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,127> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,127> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,127> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,129> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,129> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,129> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
TK_NOT <expand> 
<expnot> 
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,131> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,131> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,answer,133> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,133> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_RETURN <returnable> 
TK_NOTHING 
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 
<TK_IDEN,edgeWeight5,142> 
e 
TK_NOTHING 
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<primitivetype> 
TK_INT 
<TK_IDEN,answer,145> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_VERTEX 
<TK_IDEN,z,146> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,v,147> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<literal> 
<TK_INTLIT,5,147> 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,149> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,149> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,149> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,151> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,151> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,151> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,153> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,153> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,z,155> 
TK_MEMBEROP <endassignable> 
<primitivetype> 
TK_INT 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,155> 
e 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<breakstmt> 
TK_BREAK 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,161> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,161> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,161> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,163> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,163> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,163> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
TK_NOT <expand> 
<expnot> 
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,165> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,165> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,answer,167> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,167> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_RETURN <returnable> 
TK_NOTHING 
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 
<TK_IDEN,edgeWeight6,176> 
e 
TK_NOTHING 
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<primitivetype> 
TK_INT 
<TK_IDEN,answer,179> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_VERTEX 
<TK_IDEN,z,180> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,v,181> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<literal> 
<TK_INTLIT,5,181> 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,183> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,183> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,183> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,185> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,185> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,185> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,187> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,187> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,z,189> 
TK_MEMBEROP <endassignable> 
<primitivetype> 
TK_INT 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,189> 
e 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<breakstmt> 
TK_BREAK 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,195> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,195> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,195> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,197> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,197> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,197> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
TK_NOT <expand> 
<expnot> 
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,199> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,199> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,answer,201> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,201> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_RETURN <returnable> 
TK_NOTHING 
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 
<TK_IDEN,edgeWeight7,210> 
e 
TK_NOTHING 
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<primitivetype> 
TK_INT 
<TK_IDEN,answer,213> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_VERTEX 
<TK_IDEN,z,214> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,v,215> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<literal> 
<TK_INTLIT,5,215> 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,217> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,217> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,217> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,219> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,219> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,219> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,221> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,221> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,z,223> 
TK_MEMBEROP <endassignable> 
<primitivetype> 
TK_INT 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,223> 
e 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<breakstmt> 
TK_BREAK 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,229> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,229> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,229> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,231> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,231> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,231> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
TK_NOT <expand> 
<expnot> 
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,233> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,233> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,answer,235> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,235> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_RETURN <returnable> 
TK_NOTHING 
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 
<TK_IDEN,edgeWeight8,244> 
e 
TK_NOTHING 
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<primitivetype> 
TK_INT 
<TK_IDEN,answer,247> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_VERTEX 
<TK_IDEN,z,248> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,v,249> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<literal> 
<TK_INTLIT,5,249> 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,251> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,251> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,251> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,253> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,253> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,253> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,255> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,255> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,z,257> 
TK_MEMBEROP <endassignable> 
<primitivetype> 
TK_INT 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,257> 
e 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<breakstmt> 
TK_BREAK 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,263> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,263> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,263> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,265> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,265> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,265> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
TK_NOT <expand> 
<expnot> 
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,267> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,267> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,answer,269> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,269> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_RETURN <returnable> 
TK_NOTHING 
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 
<TK_IDEN,edgeWeight9,278> 
e 
TK_NOTHING 
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<primitivetype> 
TK_INT 
<TK_IDEN,answer,281> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_VERTEX 
<TK_IDEN,z,282> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,v,283> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<literal> 
<TK_INTLIT,5,283> 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,285> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,285> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,285> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,287> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,287> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,287> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,289> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,289> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,z,291> 
TK_MEMBEROP <endassignable> 
<primitivetype> 
TK_INT 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,291> 
e 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<breakstmt> 
TK_BREAK 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,297> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,297> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,297> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,299> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,299> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,299> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
TK_NOT <expand> 
<expnot> 
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,301> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,301> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,answer,303> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,303> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_RETURN <returnable> 
TK_NOTHING 
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 
<TK_IDEN,edgeWeight10,312> 
e 
TK_NOTHING 
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<primitivetype> 
TK_INT 
<TK_IDEN,answer,315> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_VERTEX 
<TK_IDEN,z,316> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,v,317> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<literal> 
<TK_INTLIT,5,317> 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,319> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,319> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,319> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,321> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,321> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,321> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,323> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,323> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,z,325> 
TK_MEMBEROP <endassignable> 
<primitivetype> 
TK_INT 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,325> 
e 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<breakstmt> 
TK_BREAK 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,331> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,331> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,331> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,333> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,333> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,333> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
TK_NOT <expand> 
<expnot> 
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,335> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,335> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,answer,337> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,337> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_RETURN <returnable> 
TK_NOTHING 
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 
<TK_IDEN,edgeWeight11,346> 
e 
TK_NOTHING 
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<primitivetype> 
TK_INT 
<TK_IDEN,answer,349> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_VERTEX 
<TK_IDEN,z,350> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,v,351> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<literal> 
<TK_INTLIT,5,351> 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,353> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,353> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,353> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,355> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,355> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,355> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,357> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,357> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,z,359> 
TK_MEMBEROP <endassignable> 
<primitivetype> 
TK_INT 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,359> 
e 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<breakstmt> 
TK_BREAK 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,365> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,365> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,365> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,367> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,367> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,367> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
TK_NOT <expand> 
<expnot> 
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,369> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,369> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,answer,371> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,371> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_RETURN <returnable> 
TK_NOTHING 
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 
<TK_IDEN,edgeWeight12,380> 
e 
TK_NOTHING 
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<primitivetype> 
TK_INT 
<TK_IDEN,answer,383> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_VERTEX 
<TK_IDEN,z,384> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,v,385> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<literal> 
<TK_INTLIT,5,385> 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,387> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,387> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,387> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,389> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,389> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,389> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,391> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,391> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,z,393> 
TK_MEMBEROP <endassignable> 
<primitivetype> 
TK_INT 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,393> 
e 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<breakstmt> 
TK_BREAK 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,399> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,399> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,399> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,401> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,401> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,401> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
TK_NOT <expand> 
<expnot> 
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,403> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,403> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,answer,405> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,405> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_RETURN <returnable> 
TK_NOTHING 
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 
<TK_IDEN,edgeWeight13,414> 
e 
TK_NOTHING 
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<primitivetype> 
TK_INT 
<TK_IDEN,answer,417> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_VERTEX 
<TK_IDEN,z,418> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,v,419> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<literal> 
<TK_INTLIT,5,419> 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,421> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,421> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,421> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,423> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,423> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,423> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,425> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,425> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,z,427> 
TK_MEMBEROP <endassignable> 
<primitivetype> 
TK_INT 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,427> 
e 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<breakstmt> 
TK_BREAK 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,433> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,433> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,433> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,435> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,435> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,435> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
TK_NOT <expand> 
<expnot> 
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,437> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,437> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,answer,439> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,439> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_RETURN <returnable> 
TK_NOTHING 
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 
<TK_IDEN,edgeWeight14,448> 
e 
TK_NOTHING 
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<primitivetype> 
TK_INT 
<TK_IDEN,answer,451> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_VERTEX 
<TK_IDEN,z,452> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,v,453> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<literal> 
<TK_INTLIT,5,453> 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,455> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,455> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,455> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,457> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,457> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,457> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,459> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,459> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,z,461> 
TK_MEMBEROP <endassignable> 
<primitivetype> 
TK_INT 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,461> 
e 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<breakstmt> 
TK_BREAK 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,467> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,467> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,467> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,469> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,469> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,469> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
TK_NOT <expand> 
<expnot> 
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,471> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,471> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,answer,473> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,473> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_RETURN <returnable> 
TK_NOTHING 
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 
<TK_IDEN,edgeWeight15,482> 
e 
TK_NOTHING 
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<primitivetype> 
TK_INT 
<TK_IDEN,answer,485> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_VERTEX 
<TK_IDEN,z,486> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,v,487> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<literal> 
<TK_INTLIT,5,487> 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,489> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,489> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,489> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,491> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,491> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,491> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,493> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,493> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,z,495> 
TK_MEMBEROP <endassignable> 
<primitivetype> 
TK_INT 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,495> 
e 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<breakstmt> 
TK_BREAK 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,501> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,501> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,501> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,503> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,503> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,503> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
TK_NOT <expand> 
<expnot> 
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,505> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,505> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,answer,507> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,507> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_RETURN <returnable> 
TK_NOTHING 
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 
<TK_IDEN,edgeWeight16,516> 
e 
TK_NOTHING 
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<primitivetype> 
TK_INT 
<TK_IDEN,answer,519> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_VERTEX 
<TK_IDEN,z,520> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,v,521> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<literal> 
<TK_INTLIT,5,521> 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,523> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,523> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,523> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,525> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,525> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,525> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,527> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,527> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,z,529> 
TK_MEMBEROP <endassignable> 
<primitivetype> 
TK_INT 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,529> 
e 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<breakstmt> 
TK_BREAK 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,535> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,535> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,535> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,537> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,537> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,537> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
TK_NOT <expand> 
<expnot> 
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,539> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,539> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,answer,541> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,541> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_RETURN <returnable> 
TK_NOTHING 
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 
<TK_IDEN,edgeWeight17,550> 
e 
TK_NOTHING 
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<primitivetype> 
TK_INT 
<TK_IDEN,answer,553> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_VERTEX 
<TK_IDEN,z,554> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,v,555> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<literal> 
<TK_INTLIT,5,555> 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,557> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,557> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,557> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,559> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,559> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,559> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,561> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,561> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,z,563> 
TK_MEMBEROP <endassignable> 
<primitivetype> 
TK_INT 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,563> 
e 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<breakstmt> 
TK_BREAK 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,569> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,569> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,569> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,571> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,571> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,571> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
TK_NOT <expand> 
<expnot> 
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,573> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,573> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,answer,575> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,575> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_RETURN <returnable> 
TK_NOTHING 
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 
<TK_IDEN,edgeWeight18,584> 
e 
TK_NOTHING 
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<primitivetype> 
TK_INT 
<TK_IDEN,answer,587> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_VERTEX 
<TK_IDEN,z,588> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,v,589> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<literal> 
<TK_INTLIT,5,589> 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,591> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,591> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,591> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,593> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,593> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,593> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,595> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,595> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,z,597> 
TK_MEMBEROP <endassignable> 
<primitivetype> 
TK_INT 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,597> 
e 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<breakstmt> 
TK_BREAK 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,603> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,603> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,603> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,605> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,605> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,605> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
TK_NOT <expand> 
<expnot> 
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,607> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,607> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,answer,609> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,609> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_RETURN <returnable> 
TK_NOTHING 
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 
<TK_IDEN,edgeWeight19,618> 
e 
TK_NOTHING 
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<primitivetype> 
TK_INT 
<TK_IDEN,answer,621> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_VERTEX 
<TK_IDEN,z,622> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,v,623> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<literal> 
<TK_INTLIT,5,623> 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,625> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,625> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,625> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,627> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,627> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,627> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,629> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,629> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,z,631> 
TK_MEMBEROP <endassignable> 
<primitivetype> 
TK_INT 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,631> 
e 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<breakstmt> 
TK_BREAK 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,637> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,637> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,637> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,639> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,639> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,639> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
TK_NOT <expand> 
<expnot> 
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,641> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,641> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,answer,643> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,643> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_RETURN <returnable> 
TK_NOTHING 
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 
<TK_IDEN,edgeWeight20,652> 
e 
TK_NOTHING 
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<primitivetype> 
TK_INT 
<TK_IDEN,answer,655> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<definestmt> 
TK_DEFINE <defineargs> 
<datatype> <identifier> <moreidens> 
<complextype> 
TK_VERTEX 
<TK_IDEN,z,656> 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,v,657> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<literal> 
<TK_INTLIT,5,657> 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,659> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,659> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,659> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,661> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,661> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,661> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,663> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,663> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,z,665> 
TK_MEMBEROP <endassignable> 
<primitivetype> 
TK_INT 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,665> 
e 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<breakstmt> 
TK_BREAK 
e 
e 
e 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<iteration> 
TK_FOR <loop> TK_COLON <block> 
<identifier> <loop1> 
<TK_IDEN,u,671> 
TK_IN <iterable> 
<identifier> <iterable1> 
<TK_IDEN,T,671> 
TK_ADJACENT TK_TO <assignable> 
<identifier> <assignable1> 
<TK_IDEN,T,671> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,e1,673> 
e 
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 
<identifier> <assignable1> 
<TK_IDEN,u,673> 
e 
<identifier> <assignable1> 
<TK_IDEN,T,673> 
TK_MEMBEROP <endassignable> 
TK_ROOT <primitiveval> 
e 
<possiblestmts> <statements> 
<validconditional> 
<ifblock> TK_NEWLINE <elseifblock> 
<ifstmt> TK_COLON <block> 
TK_IF <boolexp> 
<expor> <boolexp1> 
<expand> <expor1> 
TK_NOT <expand> 
<expnot> 
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 
<expor> <boolexp1> 
<expand> <expor1> 
<expnot> 
<boolresult> 
<exp> <relop> <exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,v,675> 
e 
e 
e 
e 
TK_EQ 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,675> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 
<possiblestmts> <statements> 
<validstatement> TK_NEWLINE 
<letstmt> 
TK_LET <assignable> TK_BE <equatable> 
<identifier> <assignable1> 
<TK_IDEN,answer,677> 
e 
<exp> 
<mulexp> <exp1> 
<modexp> <mulexp1> 
<baseexp> <modexp1> 
<assignorfunc> 
<identifier> <assignorfunc1> 
<TK_IDEN,e1,677> 
<assignable1> 
TK_MEMBEROP <endassignable> 
TK_WEIGHT 
e 
e 
e 
e 
e 
e 
e 
TK_RETURN <returnable> 
TK_NOTHING 
