<program> 1
<globaldefines> <fndefines> <statements> 1
<globaldefine> TK_NEWLINE <globaldefines> 1
TK_GLOBAL <defineargs> 1
<datatype> <identifier> <moreidens> 1
<complextype> 1
TK_TREE 1
<TK_IDEN,T,1> 1
e 2
<globaldefine> TK_NEWLINE <globaldefines> 2
TK_GLOBAL <defineargs> 2
<datatype> <identifier> <moreidens> 2
<complextype> 2
TK_VERTEX 2
<TK_IDEN,u,2> 2
e 3
<globaldefine> TK_NEWLINE <globaldefines> 3
TK_GLOBAL <defineargs> 3
<datatype> <identifier> <moreidens> 3
<complextype> 3
TK_EDGE 3
<TK_IDEN,e1,3> 3
e 4
<globaldefine> TK_NEWLINE <globaldefines> 4
TK_GLOBAL <defineargs> 4
<datatype> <identifier> <moreidens> 4
<primitivetype> 4
TK_INT 4
<TK_IDEN,v,4> 4
e 5
e 6
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 6
<TK_IDEN,edgeWeight1,6> 6
e 6
TK_NOTHING 6
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 7
<possiblestmts> <statements> 9
<validstatement> TK_NEWLINE 9
<definestmt> 9
TK_DEFINE <defineargs> 9
<datatype> <identifier> <moreidens> 9
<primitivetype> 9
TK_INT 9
<TK_IDEN,answer,9> 9
e 10
<possiblestmts> <statements> 10
<validstatement> TK_NEWLINE 10
<definestmt> 10
TK_DEFINE <defineargs> 10
<datatype> <identifier> <moreidens> 10
<complextype> 10
TK_VERTEX 10
<TK_IDEN,z,10> 10
e 11
<possiblestmts> <statements> 11
<validstatement> TK_NEWLINE 11
<letstmt> 11
TK_LET <assignable> TK_BE <equatable> 11
<identifier> <assignable1> 11
<TK_IDEN,v,11> 11
e 11
<exp> 11
<mulexp> <exp1> 11
<modexp> <mulexp1> 11
<baseexp> <modexp1> 11
<literal> 11
<TK_INTLIT,5,11> 11
e 12
e 12
e 12
<possiblestmts> <statements> 13
<validstatement> TK_NEWLINE 13
<iteration> 13
TK_FOR <loop> TK_COLON <block> 13
<identifier> <loop1> 13
<TK_IDEN,u,13> 13
TK_IN <iterable> 13
<identifier> <iterable1> 13
<TK_IDEN,T,13> 13
TK_ADJACENT TK_TO <assignable> 13
<identifier> <assignable1> 13
<TK_IDEN,T,13> 13
TK_MEMBEROP <endassignable> 13
TK_ROOT <primitiveval> 13
e 13
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 14
<possiblestmts> <statements> 15
<validstatement> TK_NEWLINE 15
<letstmt> 15
TK_LET <assignable> TK_BE <equatable> 15
<identifier> <assignable1> 15
<TK_IDEN,e1,15> 15
e 15
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 15
<identifier> <assignable1> 15
<TK_IDEN,u,15> 15
e 15
<identifier> <assignable1> 15
<TK_IDEN,T,15> 15
TK_MEMBEROP <endassignable> 15
TK_ROOT <primitiveval> 15
e 15
<possiblestmts> <statements> 17
<validconditional> 17
<ifblock> TK_NEWLINE <elseifblock> 17
<ifstmt> TK_COLON <block> 17
TK_IF <boolexp> 17
<expor> <boolexp1> 17
<expand> <expor1> 17
<expnot> 17
<boolresult> 17
<exp> <relop> <exp> 17
<mulexp> <exp1> 17
<modexp> <mulexp1> 17
<baseexp> <modexp1> 17
<assignorfunc> 17
<identifier> <assignorfunc1> 17
<TK_IDEN,v,17> 17
e 17
e 17
e 17
e 17
TK_EQ 17
<mulexp> <exp1> 17
<modexp> <mulexp1> 17
<baseexp> <modexp1> 17
<assignorfunc> 17
<identifier> <assignorfunc1> 17
<TK_IDEN,e1,17> 17
<assignable1> 17
TK_MEMBEROP <endassignable> 17
TK_WEIGHT 17
e 17
e 17
e 17
e 17
e 17
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 18
<possiblestmts> <statements> 19
<validstatement> TK_NEWLINE 19
<letstmt> 19
TK_LET <assignable> TK_BE <equatable> 19
<identifier> <assignable1> 19
<TK_IDEN,z,19> 19
TK_MEMBEROP <endassignable> 19
<primitivetype> 19
TK_INT 19
<exp> 19
<mulexp> <exp1> 19
<modexp> <mulexp1> 19
<baseexp> <modexp1> 19
<assignorfunc> 19
<identifier> <assignorfunc1> 19
<TK_IDEN,v,19> 19
e 20
e 20
e 20
e 20
<possiblestmts> <statements> 20
<validstatement> TK_NEWLINE 20
<breakstmt> 20
TK_BREAK 20
e 21
e 23
e 23
<possiblestmts> <statements> 25
<validstatement> TK_NEWLINE 25
<iteration> 25
TK_FOR <loop> TK_COLON <block> 25
<identifier> <loop1> 25
<TK_IDEN,u,25> 25
TK_IN <iterable> 25
<identifier> <iterable1> 25
<TK_IDEN,T,25> 25
TK_ADJACENT TK_TO <assignable> 25
<identifier> <assignable1> 25
<TK_IDEN,T,25> 25
TK_MEMBEROP <endassignable> 25
TK_ROOT <primitiveval> 25
e 25
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 26
<possiblestmts> <statements> 27
<validstatement> TK_NEWLINE 27
<letstmt> 27
TK_LET <assignable> TK_BE <equatable> 27
<identifier> <assignable1> 27
<TK_IDEN,e1,27> 27
e 27
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 27
<identifier> <assignable1> 27
<TK_IDEN,u,27> 27
e 27
<identifier> <assignable1> 27
<TK_IDEN,T,27> 27
TK_MEMBEROP <endassignable> 27
TK_ROOT <primitiveval> 27
e 27
<possiblestmts> <statements> 29
<validconditional> 29
<ifblock> TK_NEWLINE <elseifblock> 29
<ifstmt> TK_COLON <block> 29
TK_IF <boolexp> 29
<expor> <boolexp1> 29
<expand> <expor1> 29
TK_NOT <expand> 29
<expnot> 29
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 29
<expor> <boolexp1> 29
<expand> <expor1> 29
<expnot> 29
<boolresult> 29
<exp> <relop> <exp> 29
<mulexp> <exp1> 29
<modexp> <mulexp1> 29
<baseexp> <modexp1> 29
<assignorfunc> 29
<identifier> <assignorfunc1> 29
<TK_IDEN,v,29> 29
e 29
e 29
e 29
e 29
TK_EQ 29
<mulexp> <exp1> 29
<modexp> <mulexp1> 29
<baseexp> <modexp1> 29
<assignorfunc> 29
<identifier> <assignorfunc1> 29
<TK_IDEN,e1,29> 29
<assignable1> 29
TK_MEMBEROP <endassignable> 29
TK_WEIGHT 29
e 29
e 29
e 29
e 29
e 29
e 29
e 29
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 30
<possiblestmts> <statements> 31
<validstatement> TK_NEWLINE 31
<letstmt> 31
TK_LET <assignable> TK_BE <equatable> 31
<identifier> <assignable1> 31
<TK_IDEN,answer,31> 31
e 31
<exp> 31
<mulexp> <exp1> 31
<modexp> <mulexp1> 31
<baseexp> <modexp1> 31
<assignorfunc> 31
<identifier> <assignorfunc1> 31
<TK_IDEN,e1,31> 31
<assignable1> 31
TK_MEMBEROP <endassignable> 31
TK_WEIGHT 31
e 32
e 32
e 32
e 32
e 34
e 34
e 36
TK_RETURN <returnable> 36
TK_NOTHING 36
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 40
<TK_IDEN,edgeWeight2,40> 40
e 40
TK_NOTHING 40
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 41
<possiblestmts> <statements> 43
<validstatement> TK_NEWLINE 43
<definestmt> 43
TK_DEFINE <defineargs> 43
<datatype> <identifier> <moreidens> 43
<primitivetype> 43
TK_INT 43
<TK_IDEN,answer,43> 43
e 44
<possiblestmts> <statements> 44
<validstatement> TK_NEWLINE 44
<definestmt> 44
TK_DEFINE <defineargs> 44
<datatype> <identifier> <moreidens> 44
<complextype> 44
TK_VERTEX 44
<TK_IDEN,z,44> 44
e 45
<possiblestmts> <statements> 45
<validstatement> TK_NEWLINE 45
<letstmt> 45
TK_LET <assignable> TK_BE <equatable> 45
<identifier> <assignable1> 45
<TK_IDEN,v,45> 45
e 45
<exp> 45
<mulexp> <exp1> 45
<modexp> <mulexp1> 45
<baseexp> <modexp1> 45
<literal> 45
<TK_INTLIT,5,45> 45
e 46
e 46
e 46
<possiblestmts> <statements> 47
<validstatement> TK_NEWLINE 47
<iteration> 47
TK_FOR <loop> TK_COLON <block> 47
<identifier> <loop1> 47
<TK_IDEN,u,47> 47
TK_IN <iterable> 47
<identifier> <iterable1> 47
<TK_IDEN,T,47> 47
TK_ADJACENT TK_TO <assignable> 47
<identifier> <assignable1> 47
<TK_IDEN,T,47> 47
TK_MEMBEROP <endassignable> 47
TK_ROOT <primitiveval> 47
e 47
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 48
<possiblestmts> <statements> 49
<validstatement> TK_NEWLINE 49
<letstmt> 49
TK_LET <assignable> TK_BE <equatable> 49
<identifier> <assignable1> 49
<TK_IDEN,e1,49> 49
e 49
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 49
<identifier> <assignable1> 49
<TK_IDEN,u,49> 49
e 49
<identifier> <assignable1> 49
<TK_IDEN,T,49> 49
TK_MEMBEROP <endassignable> 49
TK_ROOT <primitiveval> 49
e 49
<possiblestmts> <statements> 51
<validconditional> 51
<ifblock> TK_NEWLINE <elseifblock> 51
<ifstmt> TK_COLON <block> 51
TK_IF <boolexp> 51
<expor> <boolexp1> 51
<expand> <expor1> 51
<expnot> 51
<boolresult> 51
<exp> <relop> <exp> 51
<mulexp> <exp1> 51
<modexp> <mulexp1> 51
<baseexp> <modexp1> 51
<assignorfunc> 51
<identifier> <assignorfunc1> 51
<TK_IDEN,v,51> 51
e 51
e 51
e 51
e 51
TK_EQ 51
<mulexp> <exp1> 51
<modexp> <mulexp1> 51
<baseexp> <modexp1> 51
<assignorfunc> 51
<identifier> <assignorfunc1> 51
<TK_IDEN,e1,51> 51
<assignable1> 51
TK_MEMBEROP <endassignable> 51
TK_WEIGHT 51
e 51
e 51
e 51
e 51
e 51
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 52
<possiblestmts> <statements> 53
<validstatement> TK_NEWLINE 53
<letstmt> 53
TK_LET <assignable> TK_BE <equatable> 53
<identifier> <assignable1> 53
<TK_IDEN,z,53> 53
TK_MEMBEROP <endassignable> 53
<primitivetype> 53
TK_INT 53
<exp> 53
<mulexp> <exp1> 53
<modexp> <mulexp1> 53
<baseexp> <modexp1> 53
<assignorfunc> 53
<identifier> <assignorfunc1> 53
<TK_IDEN,v,53> 53
e 54
e 54
e 54
e 54
<possiblestmts> <statements> 54
<validstatement> TK_NEWLINE 54
<breakstmt> 54
TK_BREAK 54
e 55
e 57
e 57
<possiblestmts> <statements> 59
<validstatement> TK_NEWLINE 59
<iteration> 59
TK_FOR <loop> TK_COLON <block> 59
<identifier> <loop1> 59
<TK_IDEN,u,59> 59
TK_IN <iterable> 59
<identifier> <iterable1> 59
<TK_IDEN,T,59> 59
TK_ADJACENT TK_TO <assignable> 59
<identifier> <assignable1> 59
<TK_IDEN,T,59> 59
TK_MEMBEROP <endassignable> 59
TK_ROOT <primitiveval> 59
e 59
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 60
<possiblestmts> <statements> 61
<validstatement> TK_NEWLINE 61
<letstmt> 61
TK_LET <assignable> TK_BE <equatable> 61
<identifier> <assignable1> 61
<TK_IDEN,e1,61> 61
e 61
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 61
<identifier> <assignable1> 61
<TK_IDEN,u,61> 61
e 61
<identifier> <assignable1> 61
<TK_IDEN,T,61> 61
TK_MEMBEROP <endassignable> 61
TK_ROOT <primitiveval> 61
e 61
<possiblestmts> <statements> 63
<validconditional> 63
<ifblock> TK_NEWLINE <elseifblock> 63
<ifstmt> TK_COLON <block> 63
TK_IF <boolexp> 63
<expor> <boolexp1> 63
<expand> <expor1> 63
TK_NOT <expand> 63
<expnot> 63
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 63
<expor> <boolexp1> 63
<expand> <expor1> 63
<expnot> 63
<boolresult> 63
<exp> <relop> <exp> 63
<mulexp> <exp1> 63
<modexp> <mulexp1> 63
<baseexp> <modexp1> 63
<assignorfunc> 63
<identifier> <assignorfunc1> 63
<TK_IDEN,v,63> 63
e 63
e 63
e 63
e 63
TK_EQ 63
<mulexp> <exp1> 63
<modexp> <mulexp1> 63
<baseexp> <modexp1> 63
<assignorfunc> 63
<identifier> <assignorfunc1> 63
<TK_IDEN,e1,63> 63
<assignable1> 63
TK_MEMBEROP <endassignable> 63
TK_WEIGHT 63
e 63
e 63
e 63
e 63
e 63
e 63
e 63
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 64
<possiblestmts> <statements> 65
<validstatement> TK_NEWLINE 65
<letstmt> 65
TK_LET <assignable> TK_BE <equatable> 65
<identifier> <assignable1> 65
<TK_IDEN,answer,65> 65
e 65
<exp> 65
<mulexp> <exp1> 65
<modexp> <mulexp1> 65
<baseexp> <modexp1> 65
<assignorfunc> 65
<identifier> <assignorfunc1> 65
<TK_IDEN,e1,65> 65
<assignable1> 65
TK_MEMBEROP <endassignable> 65
TK_WEIGHT 65
e 66
e 66
e 66
e 66
e 68
e 68
e 70
TK_RETURN <returnable> 70
TK_NOTHING 70
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 74
<TK_IDEN,edgeWeight3,74> 74
e 74
TK_NOTHING 74
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 75
<possiblestmts> <statements> 77
<validstatement> TK_NEWLINE 77
<definestmt> 77
TK_DEFINE <defineargs> 77
<datatype> <identifier> <moreidens> 77
<primitivetype> 77
TK_INT 77
<TK_IDEN,answer,77> 77
e 78
<possiblestmts> <statements> 78
<validstatement> TK_NEWLINE 78
<definestmt> 78
TK_DEFINE <defineargs> 78
<datatype> <identifier> <moreidens> 78
<complextype> 78
TK_VERTEX 78
<TK_IDEN,z,78> 78
e 79
<possiblestmts> <statements> 79
<validstatement> TK_NEWLINE 79
<letstmt> 79
TK_LET <assignable> TK_BE <equatable> 79
<identifier> <assignable1> 79
<TK_IDEN,v,79> 79
e 79
<exp> 79
<mulexp> <exp1> 79
<modexp> <mulexp1> 79
<baseexp> <modexp1> 79
<literal> 79
<TK_INTLIT,5,79> 79
e 80
e 80
e 80
<possiblestmts> <statements> 81
<validstatement> TK_NEWLINE 81
<iteration> 81
TK_FOR <loop> TK_COLON <block> 81
<identifier> <loop1> 81
<TK_IDEN,u,81> 81
TK_IN <iterable> 81
<identifier> <iterable1> 81
<TK_IDEN,T,81> 81
TK_ADJACENT TK_TO <assignable> 81
<identifier> <assignable1> 81
<TK_IDEN,T,81> 81
TK_MEMBEROP <endassignable> 81
TK_ROOT <primitiveval> 81
e 81
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 82
<possiblestmts> <statements> 83
<validstatement> TK_NEWLINE 83
<letstmt> 83
TK_LET <assignable> TK_BE <equatable> 83
<identifier> <assignable1> 83
<TK_IDEN,e1,83> 83
e 83
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 83
<identifier> <assignable1> 83
<TK_IDEN,u,83> 83
e 83
<identifier> <assignable1> 83
<TK_IDEN,T,83> 83
TK_MEMBEROP <endassignable> 83
TK_ROOT <primitiveval> 83
e 83
<possiblestmts> <statements> 85
<validconditional> 85
<ifblock> TK_NEWLINE <elseifblock> 85
<ifstmt> TK_COLON <block> 85
TK_IF <boolexp> 85
<expor> <boolexp1> 85
<expand> <expor1> 85
<expnot> 85
<boolresult> 85
<exp> <relop> <exp> 85
<mulexp> <exp1> 85
<modexp> <mulexp1> 85
<baseexp> <modexp1> 85
<assignorfunc> 85
<identifier> <assignorfunc1> 85
<TK_IDEN,v,85> 85
e 85
e 85
e 85
e 85
TK_EQ 85
<mulexp> <exp1> 85
<modexp> <mulexp1> 85
<baseexp> <modexp1> 85
<assignorfunc> 85
<identifier> <assignorfunc1> 85
<TK_IDEN,e1,85> 85
<assignable1> 85
TK_MEMBEROP <endassignable> 85
TK_WEIGHT 85
e 85
e 85
e 85
e 85
e 85
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 86
<possiblestmts> <statements> 87
<validstatement> TK_NEWLINE 87
<letstmt> 87
TK_LET <assignable> TK_BE <equatable> 87
<identifier> <assignable1> 87
<TK_IDEN,z,87> 87
TK_MEMBEROP <endassignable> 87
<primitivetype> 87
TK_INT 87
<exp> 87
<mulexp> <exp1> 87
<modexp> <mulexp1> 87
<baseexp> <modexp1> 87
<assignorfunc> 87
<identifier> <assignorfunc1> 87
<TK_IDEN,v,87> 87
e 88
e 88
e 88
e 88
<possiblestmts> <statements> 88
<validstatement> TK_NEWLINE 88
<breakstmt> 88
TK_BREAK 88
e 89
e 91
e 91
<possiblestmts> <statements> 93
<validstatement> TK_NEWLINE 93
<iteration> 93
TK_FOR <loop> TK_COLON <block> 93
<identifier> <loop1> 93
<TK_IDEN,u,93> 93
TK_IN <iterable> 93
<identifier> <iterable1> 93
<TK_IDEN,T,93> 93
TK_ADJACENT TK_TO <assignable> 93
<identifier> <assignable1> 93
<TK_IDEN,T,93> 93
TK_MEMBEROP <endassignable> 93
TK_ROOT <primitiveval> 93
e 93
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 94
<possiblestmts> <statements> 95
<validstatement> TK_NEWLINE 95
<letstmt> 95
TK_LET <assignable> TK_BE <equatable> 95
<identifier> <assignable1> 95
<TK_IDEN,e1,95> 95
e 95
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 95
<identifier> <assignable1> 95
<TK_IDEN,u,95> 95
e 95
<identifier> <assignable1> 95
<TK_IDEN,T,95> 95
TK_MEMBEROP <endassignable> 95
TK_ROOT <primitiveval> 95
e 95
<possiblestmts> <statements> 97
<validconditional> 97
<ifblock> TK_NEWLINE <elseifblock> 97
<ifstmt> TK_COLON <block> 97
TK_IF <boolexp> 97
<expor> <boolexp1> 97
<expand> <expor1> 97
TK_NOT <expand> 97
<expnot> 97
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 97
<expor> <boolexp1> 97
<expand> <expor1> 97
<expnot> 97
<boolresult> 97
<exp> <relop> <exp> 97
<mulexp> <exp1> 97
<modexp> <mulexp1> 97
<baseexp> <modexp1> 97
<assignorfunc> 97
<identifier> <assignorfunc1> 97
<TK_IDEN,v,97> 97
e 97
e 97
e 97
e 97
TK_EQ 97
<mulexp> <exp1> 97
<modexp> <mulexp1> 97
<baseexp> <modexp1> 97
<assignorfunc> 97
<identifier> <assignorfunc1> 97
<TK_IDEN,e1,97> 97
<assignable1> 97
TK_MEMBEROP <endassignable> 97
TK_WEIGHT 97
e 97
e 97
e 97
e 97
e 97
e 97
e 97
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 98
<possiblestmts> <statements> 99
<validstatement> TK_NEWLINE 99
<letstmt> 99
TK_LET <assignable> TK_BE <equatable> 99
<identifier> <assignable1> 99
<TK_IDEN,answer,99> 99
e 99
<exp> 99
<mulexp> <exp1> 99
<modexp> <mulexp1> 99
<baseexp> <modexp1> 99
<assignorfunc> 99
<identifier> <assignorfunc1> 99
<TK_IDEN,e1,99> 99
<assignable1> 99
TK_MEMBEROP <endassignable> 99
TK_WEIGHT 99
e 100
e 100
e 100
e 100
e 102
e 102
e 104
TK_RETURN <returnable> 104
TK_NOTHING 104
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 108
<TK_IDEN,edgeWeight4,108> 108
e 108
TK_NOTHING 108
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 109
<possiblestmts> <statements> 111
<validstatement> TK_NEWLINE 111
<definestmt> 111
TK_DEFINE <defineargs> 111
<datatype> <identifier> <moreidens> 111
<primitivetype> 111
TK_INT 111
<TK_IDEN,answer,111> 111
e 112
<possiblestmts> <statements> 112
<validstatement> TK_NEWLINE 112
<definestmt> 112
TK_DEFINE <defineargs> 112
<datatype> <identifier> <moreidens> 112
<complextype> 112
TK_VERTEX 112
<TK_IDEN,z,112> 112
e 113
<possiblestmts> <statements> 113
<validstatement> TK_NEWLINE 113
<letstmt> 113
TK_LET <assignable> TK_BE <equatable> 113
<identifier> <assignable1> 113
<TK_IDEN,v,113> 113
e 113
<exp> 113
<mulexp> <exp1> 113
<modexp> <mulexp1> 113
<baseexp> <modexp1> 113
<literal> 113
<TK_INTLIT,5,113> 113
e 114
e 114
e 114
<possiblestmts> <statements> 115
<validstatement> TK_NEWLINE 115
<iteration> 115
TK_FOR <loop> TK_COLON <block> 115
<identifier> <loop1> 115
<TK_IDEN,u,115> 115
TK_IN <iterable> 115
<identifier> <iterable1> 115
<TK_IDEN,T,115> 115
TK_ADJACENT TK_TO <assignable> 115
<identifier> <assignable1> 115
<TK_IDEN,T,115> 115
TK_MEMBEROP <endassignable> 115
TK_ROOT <primitiveval> 115
e 115
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 116
<possiblestmts> <statements> 117
<validstatement> TK_NEWLINE 117
<letstmt> 117
TK_LET <assignable> TK_BE <equatable> 117
<identifier> <assignable1> 117
<TK_IDEN,e1,117> 117
e 117
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 117
<identifier> <assignable1> 117
<TK_IDEN,u,117> 117
e 117
<identifier> <assignable1> 117
<TK_IDEN,T,117> 117
TK_MEMBEROP <endassignable> 117
TK_ROOT <primitiveval> 117
e 117
<possiblestmts> <statements> 119
<validconditional> 119
<ifblock> TK_NEWLINE <elseifblock> 119
<ifstmt> TK_COLON <block> 119
TK_IF <boolexp> 119
<expor> <boolexp1> 119
<expand> <expor1> 119
<expnot> 119
<boolresult> 119
<exp> <relop> <exp> 119
<mulexp> <exp1> 119
<modexp> <mulexp1> 119
<baseexp> <modexp1> 119
<assignorfunc> 119
<identifier> <assignorfunc1> 119
<TK_IDEN,v,119> 119
e 119
e 119
e 119
e 119
TK_EQ 119
<mulexp> <exp1> 119
<modexp> <mulexp1> 119
<baseexp> <modexp1> 119
<assignorfunc> 119
<identifier> <assignorfunc1> 119
<TK_IDEN,e1,119> 119
<assignable1> 119
TK_MEMBEROP <endassignable> 119
TK_WEIGHT 119
e 119
e 119
e 119
e 119
e 119
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 120
<possiblestmts> <statements> 121
<validstatement> TK_NEWLINE 121
<letstmt> 121
TK_LET <assignable> TK_BE <equatable> 121
<identifier> <assignable1> 121
<TK_IDEN,z,121> 121
TK_MEMBEROP <endassignable> 121
<primitivetype> 121
TK_INT 121
<exp> 121
<mulexp> <exp1> 121
<modexp> <mulexp1> 121
<baseexp> <modexp1> 121
<assignorfunc> 121
<identifier> <assignorfunc1> 121
<TK_IDEN,v,121> 121
e 122
e 122
e 122
e 122
<possiblestmts> <statements> 122
<validstatement> TK_NEWLINE 122
<breakstmt> 122
TK_BREAK 122
e 123
e 125
e 125
<possiblestmts> <statements> 127
<validstatement> TK_NEWLINE 127
<iteration> 127
TK_FOR <loop> TK_COLON <block> 127
<identifier> <loop1> 127
<TK_IDEN,u,127> 127
TK_IN <iterable> 127
<identifier> <iterable1> 127
<TK_IDEN,T,127> 127
TK_ADJACENT TK_TO <assignable> 127
<identifier> <assignable1> 127
<TK_IDEN,T,127> 127
TK_MEMBEROP <endassignable> 127
TK_ROOT <primitiveval> 127
e 127
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 128
<possiblestmts> <statements> 129
<validstatement> TK_NEWLINE 129
<letstmt> 129
TK_LET <assignable> TK_BE <equatable> 129
<identifier> <assignable1> 129
<TK_IDEN,e1,129> 129
e 129
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 129
<identifier> <assignable1> 129
<TK_IDEN,u,129> 129
e 129
<identifier> <assignable1> 129
<TK_IDEN,T,129> 129
TK_MEMBEROP <endassignable> 129
TK_ROOT <primitiveval> 129
e 129
<possiblestmts> <statements> 131
<validconditional> 131
<ifblock> TK_NEWLINE <elseifblock> 131
<ifstmt> TK_COLON <block> 131
TK_IF <boolexp> 131
<expor> <boolexp1> 131
<expand> <expor1> 131
TK_NOT <expand> 131
<expnot> 131
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 131
<expor> <boolexp1> 131
<expand> <expor1> 131
<expnot> 131
<boolresult> 131
<exp> <relop> <exp> 131
<mulexp> <exp1> 131
<modexp> <mulexp1> 131
<baseexp> <modexp1> 131
<assignorfunc> 131
<identifier> <assignorfunc1> 131
<TK_IDEN,v,131> 131
e 131
e 131
e 131
e 131
TK_EQ 131
<mulexp> <exp1> 131
<modexp> <mulexp1> 131
<baseexp> <modexp1> 131
<assignorfunc> 131
<identifier> <assignorfunc1> 131
<TK_IDEN,e1,131> 131
<assignable1> 131
TK_MEMBEROP <endassignable> 131
TK_WEIGHT 131
e 131
e 131
e 131
e 131
e 131
e 131
e 131
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 132
<possiblestmts> <statements> 133
<validstatement> TK_NEWLINE 133
<letstmt> 133
TK_LET <assignable> TK_BE <equatable> 133
<identifier> <assignable1> 133
<TK_IDEN,answer,133> 133
e 133
<exp> 133
<mulexp> <exp1> 133
<modexp> <mulexp1> 133
<baseexp> <modexp1> 133
<assignorfunc> 133
<identifier> <assignorfunc1> 133
<TK_IDEN,e1,133> 133
<assignable1> 133
TK_MEMBEROP <endassignable> 133
TK_WEIGHT 133
e 134
e 134
e 134
e 134
e 136
e 136
e 138
TK_RETURN <returnable> 138
TK_NOTHING 138
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 142
<TK_IDEN,edgeWeight5,142> 142
e 142
TK_NOTHING 142
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 143
<possiblestmts> <statements> 145
<validstatement> TK_NEWLINE 145
<definestmt> 145
TK_DEFINE <defineargs> 145
<datatype> <identifier> <moreidens> 145
<primitivetype> 145
TK_INT 145
<TK_IDEN,answer,145> 145
e 146
<possiblestmts> <statements> 146
<validstatement> TK_NEWLINE 146
<definestmt> 146
TK_DEFINE <defineargs> 146
<datatype> <identifier> <moreidens> 146
<complextype> 146
TK_VERTEX 146
<TK_IDEN,z,146> 146
e 147
<possiblestmts> <statements> 147
<validstatement> TK_NEWLINE 147
<letstmt> 147
TK_LET <assignable> TK_BE <equatable> 147
<identifier> <assignable1> 147
<TK_IDEN,v,147> 147
e 147
<exp> 147
<mulexp> <exp1> 147
<modexp> <mulexp1> 147
<baseexp> <modexp1> 147
<literal> 147
<TK_INTLIT,5,147> 147
e 148
e 148
e 148
<possiblestmts> <statements> 149
<validstatement> TK_NEWLINE 149
<iteration> 149
TK_FOR <loop> TK_COLON <block> 149
<identifier> <loop1> 149
<TK_IDEN,u,149> 149
TK_IN <iterable> 149
<identifier> <iterable1> 149
<TK_IDEN,T,149> 149
TK_ADJACENT TK_TO <assignable> 149
<identifier> <assignable1> 149
<TK_IDEN,T,149> 149
TK_MEMBEROP <endassignable> 149
TK_ROOT <primitiveval> 149
e 149
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 150
<possiblestmts> <statements> 151
<validstatement> TK_NEWLINE 151
<letstmt> 151
TK_LET <assignable> TK_BE <equatable> 151
<identifier> <assignable1> 151
<TK_IDEN,e1,151> 151
e 151
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 151
<identifier> <assignable1> 151
<TK_IDEN,u,151> 151
e 151
<identifier> <assignable1> 151
<TK_IDEN,T,151> 151
TK_MEMBEROP <endassignable> 151
TK_ROOT <primitiveval> 151
e 151
<possiblestmts> <statements> 153
<validconditional> 153
<ifblock> TK_NEWLINE <elseifblock> 153
<ifstmt> TK_COLON <block> 153
TK_IF <boolexp> 153
<expor> <boolexp1> 153
<expand> <expor1> 153
<expnot> 153
<boolresult> 153
<exp> <relop> <exp> 153
<mulexp> <exp1> 153
<modexp> <mulexp1> 153
<baseexp> <modexp1> 153
<assignorfunc> 153
<identifier> <assignorfunc1> 153
<TK_IDEN,v,153> 153
e 153
e 153
e 153
e 153
TK_EQ 153
<mulexp> <exp1> 153
<modexp> <mulexp1> 153
<baseexp> <modexp1> 153
<assignorfunc> 153
<identifier> <assignorfunc1> 153
<TK_IDEN,e1,153> 153
<assignable1> 153
TK_MEMBEROP <endassignable> 153
TK_WEIGHT 153
e 153
e 153
e 153
e 153
e 153
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 154
<possiblestmts> <statements> 155
<validstatement> TK_NEWLINE 155
<letstmt> 155
TK_LET <assignable> TK_BE <equatable> 155
<identifier> <assignable1> 155
<TK_IDEN,z,155> 155
TK_MEMBEROP <endassignable> 155
<primitivetype> 155
TK_INT 155
<exp> 155
<mulexp> <exp1> 155
<modexp> <mulexp1> 155
<baseexp> <modexp1> 155
<assignorfunc> 155
<identifier> <assignorfunc1> 155
<TK_IDEN,v,155> 155
e 156
e 156
e 156
e 156
<possiblestmts> <statements> 156
<validstatement> TK_NEWLINE 156
<breakstmt> 156
TK_BREAK 156
e 157
e 159
e 159
<possiblestmts> <statements> 161
<validstatement> TK_NEWLINE 161
<iteration> 161
TK_FOR <loop> TK_COLON <block> 161
<identifier> <loop1> 161
<TK_IDEN,u,161> 161
TK_IN <iterable> 161
<identifier> <iterable1> 161
<TK_IDEN,T,161> 161
TK_ADJACENT TK_TO <assignable> 161
<identifier> <assignable1> 161
<TK_IDEN,T,161> 161
TK_MEMBEROP <endassignable> 161
TK_ROOT <primitiveval> 161
e 161
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 162
<possiblestmts> <statements> 163
<validstatement> TK_NEWLINE 163
<letstmt> 163
TK_LET <assignable> TK_BE <equatable> 163
<identifier> <assignable1> 163
<TK_IDEN,e1,163> 163
e 163
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 163
<identifier> <assignable1> 163
<TK_IDEN,u,163> 163
e 163
<identifier> <assignable1> 163
<TK_IDEN,T,163> 163
TK_MEMBEROP <endassignable> 163
TK_ROOT <primitiveval> 163
e 163
<possiblestmts> <statements> 165
<validconditional> 165
<ifblock> TK_NEWLINE <elseifblock> 165
<ifstmt> TK_COLON <block> 165
TK_IF <boolexp> 165
<expor> <boolexp1> 165
<expand> <expor1> 165
TK_NOT <expand> 165
<expnot> 165
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 165
<expor> <boolexp1> 165
<expand> <expor1> 165
<expnot> 165
<boolresult> 165
<exp> <relop> <exp> 165
<mulexp> <exp1> 165
<modexp> <mulexp1> 165
<baseexp> <modexp1> 165
<assignorfunc> 165
<identifier> <assignorfunc1> 165
<TK_IDEN,v,165> 165
e 165
e 165
e 165
e 165
TK_EQ 165
<mulexp> <exp1> 165
<modexp> <mulexp1> 165
<baseexp> <modexp1> 165
<assignorfunc> 165
<identifier> <assignorfunc1> 165
<TK_IDEN,e1,165> 165
<assignable1> 165
TK_MEMBEROP <endassignable> 165
TK_WEIGHT 165
e 165
e 165
e 165
e 165
e 165
e 165
e 165
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 166
<possiblestmts> <statements> 167
<validstatement> TK_NEWLINE 167
<letstmt> 167
TK_LET <assignable> TK_BE <equatable> 167
<identifier> <assignable1> 167
<TK_IDEN,answer,167> 167
e 167
<exp> 167
<mulexp> <exp1> 167
<modexp> <mulexp1> 167
<baseexp> <modexp1> 167
<assignorfunc> 167
<identifier> <assignorfunc1> 167
<TK_IDEN,e1,167> 167
<assignable1> 167
TK_MEMBEROP <endassignable> 167
TK_WEIGHT 167
e 168
e 168
e 168
e 168
e 170
e 170
e 172
TK_RETURN <returnable> 172
TK_NOTHING 172
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 176
<TK_IDEN,edgeWeight6,176> 176
e 176
TK_NOTHING 176
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 177
<possiblestmts> <statements> 179
<validstatement> TK_NEWLINE 179
<definestmt> 179
TK_DEFINE <defineargs> 179
<datatype> <identifier> <moreidens> 179
<primitivetype> 179
TK_INT 179
<TK_IDEN,answer,179> 179
e 180
<possiblestmts> <statements> 180
<validstatement> TK_NEWLINE 180
<definestmt> 180
TK_DEFINE <defineargs> 180
<datatype> <identifier> <moreidens> 180
<complextype> 180
TK_VERTEX 180
<TK_IDEN,z,180> 180
e 181
<possiblestmts> <statements> 181
<validstatement> TK_NEWLINE 181
<letstmt> 181
TK_LET <assignable> TK_BE <equatable> 181
<identifier> <assignable1> 181
<TK_IDEN,v,181> 181
e 181
<exp> 181
<mulexp> <exp1> 181
<modexp> <mulexp1> 181
<baseexp> <modexp1> 181
<literal> 181
<TK_INTLIT,5,181> 181
e 182
e 182
e 182
<possiblestmts> <statements> 183
<validstatement> TK_NEWLINE 183
<iteration> 183
TK_FOR <loop> TK_COLON <block> 183
<identifier> <loop1> 183
<TK_IDEN,u,183> 183
TK_IN <iterable> 183
<identifier> <iterable1> 183
<TK_IDEN,T,183> 183
TK_ADJACENT TK_TO <assignable> 183
<identifier> <assignable1> 183
<TK_IDEN,T,183> 183
TK_MEMBEROP <endassignable> 183
TK_ROOT <primitiveval> 183
e 183
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 184
<possiblestmts> <statements> 185
<validstatement> TK_NEWLINE 185
<letstmt> 185
TK_LET <assignable> TK_BE <equatable> 185
<identifier> <assignable1> 185
<TK_IDEN,e1,185> 185
e 185
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 185
<identifier> <assignable1> 185
<TK_IDEN,u,185> 185
e 185
<identifier> <assignable1> 185
<TK_IDEN,T,185> 185
TK_MEMBEROP <endassignable> 185
TK_ROOT <primitiveval> 185
e 185
<possiblestmts> <statements> 187
<validconditional> 187
<ifblock> TK_NEWLINE <elseifblock> 187
<ifstmt> TK_COLON <block> 187
TK_IF <boolexp> 187
<expor> <boolexp1> 187
<expand> <expor1> 187
<expnot> 187
<boolresult> 187
<exp> <relop> <exp> 187
<mulexp> <exp1> 187
<modexp> <mulexp1> 187
<baseexp> <modexp1> 187
<assignorfunc> 187
<identifier> <assignorfunc1> 187
<TK_IDEN,v,187> 187
e 187
e 187
e 187
e 187
TK_EQ 187
<mulexp> <exp1> 187
<modexp> <mulexp1> 187
<baseexp> <modexp1> 187
<assignorfunc> 187
<identifier> <assignorfunc1> 187
<TK_IDEN,e1,187> 187
<assignable1> 187
TK_MEMBEROP <endassignable> 187
TK_WEIGHT 187
e 187
e 187
e 187
e 187
e 187
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 188
<possiblestmts> <statements> 189
<validstatement> TK_NEWLINE 189
<letstmt> 189
TK_LET <assignable> TK_BE <equatable> 189
<identifier> <assignable1> 189
<TK_IDEN,z,189> 189
TK_MEMBEROP <endassignable> 189
<primitivetype> 189
TK_INT 189
<exp> 189
<mulexp> <exp1> 189
<modexp> <mulexp1> 189
<baseexp> <modexp1> 189
<assignorfunc> 189
<identifier> <assignorfunc1> 189
<TK_IDEN,v,189> 189
e 190
e 190
e 190
e 190
<possiblestmts> <statements> 190
<validstatement> TK_NEWLINE 190
<breakstmt> 190
TK_BREAK 190
e 191
e 193
e 193
<possiblestmts> <statements> 195
<validstatement> TK_NEWLINE 195
<iteration> 195
TK_FOR <loop> TK_COLON <block> 195
<identifier> <loop1> 195
<TK_IDEN,u,195> 195
TK_IN <iterable> 195
<identifier> <iterable1> 195
<TK_IDEN,T,195> 195
TK_ADJACENT TK_TO <assignable> 195
<identifier> <assignable1> 195
<TK_IDEN,T,195> 195
TK_MEMBEROP <endassignable> 195
TK_ROOT <primitiveval> 195
e 195
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 196
<possiblestmts> <statements> 197
<validstatement> TK_NEWLINE 197
<letstmt> 197
TK_LET <assignable> TK_BE <equatable> 197
<identifier> <assignable1> 197
<TK_IDEN,e1,197> 197
e 197
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 197
<identifier> <assignable1> 197
<TK_IDEN,u,197> 197
e 197
<identifier> <assignable1> 197
<TK_IDEN,T,197> 197
TK_MEMBEROP <endassignable> 197
TK_ROOT <primitiveval> 197
e 197
<possiblestmts> <statements> 199
<validconditional> 199
<ifblock> TK_NEWLINE <elseifblock> 199
<ifstmt> TK_COLON <block> 199
TK_IF <boolexp> 199
<expor> <boolexp1> 199
<expand> <expor1> 199
TK_NOT <expand> 199
<expnot> 199
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 199
<expor> <boolexp1> 199
<expand> <expor1> 199
<expnot> 199
<boolresult> 199
<exp> <relop> <exp> 199
<mulexp> <exp1> 199
<modexp> <mulexp1> 199
<baseexp> <modexp1> 199
<assignorfunc> 199
<identifier> <assignorfunc1> 199
<TK_IDEN,v,199> 199
e 199
e 199
e 199
e 199
TK_EQ 199
<mulexp> <exp1> 199
<modexp> <mulexp1> 199
<baseexp> <modexp1> 199
<assignorfunc> 199
<identifier> <assignorfunc1> 199
<TK_IDEN,e1,199> 199
<assignable1> 199
TK_MEMBEROP <endassignable> 199
TK_WEIGHT 199
e 199
e 199
e 199
e 199
e 199
e 199
e 199
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 200
<possiblestmts> <statements> 201
<validstatement> TK_NEWLINE 201
<letstmt> 201
TK_LET <assignable> TK_BE <equatable> 201
<identifier> <assignable1> 201
<TK_IDEN,answer,201> 201
e 201
<exp> 201
<mulexp> <exp1> 201
<modexp> <mulexp1> 201
<baseexp> <modexp1> 201
<assignorfunc> 201
<identifier> <assignorfunc1> 201
<TK_IDEN,e1,201> 201
<assignable1> 201
TK_MEMBEROP <endassignable> 201
TK_WEIGHT 201
e 202
e 202
e 202
e 202
e 204
e 204
e 206
TK_RETURN <returnable> 206
TK_NOTHING 206
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 210
<TK_IDEN,edgeWeight7,210> 210
e 210
TK_NOTHING 210
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 211
<possiblestmts> <statements> 213
<validstatement> TK_NEWLINE 213
<definestmt> 213
TK_DEFINE <defineargs> 213
<datatype> <identifier> <moreidens> 213
<primitivetype> 213
TK_INT 213
<TK_IDEN,answer,213> 213
e 214
<possiblestmts> <statements> 214
<validstatement> TK_NEWLINE 214
<definestmt> 214
TK_DEFINE <defineargs> 214
<datatype> <identifier> <moreidens> 214
<complextype> 214
TK_VERTEX 214
<TK_IDEN,z,214> 214
e 215
<possiblestmts> <statements> 215
<validstatement> TK_NEWLINE 215
<letstmt> 215
TK_LET <assignable> TK_BE <equatable> 215
<identifier> <assignable1> 215
<TK_IDEN,v,215> 215
e 215
<exp> 215
<mulexp> <exp1> 215
<modexp> <mulexp1> 215
<baseexp> <modexp1> 215
<literal> 215
<TK_INTLIT,5,215> 215
e 216
e 216
e 216
<possiblestmts> <statements> 217
<validstatement> TK_NEWLINE 217
<iteration> 217
TK_FOR <loop> TK_COLON <block> 217
<identifier> <loop1> 217
<TK_IDEN,u,217> 217
TK_IN <iterable> 217
<identifier> <iterable1> 217
<TK_IDEN,T,217> 217
TK_ADJACENT TK_TO <assignable> 217
<identifier> <assignable1> 217
<TK_IDEN,T,217> 217
TK_MEMBEROP <endassignable> 217
TK_ROOT <primitiveval> 217
e 217
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 218
<possiblestmts> <statements> 219
<validstatement> TK_NEWLINE 219
<letstmt> 219
TK_LET <assignable> TK_BE <equatable> 219
<identifier> <assignable1> 219
<TK_IDEN,e1,219> 219
e 219
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 219
<identifier> <assignable1> 219
<TK_IDEN,u,219> 219
e 219
<identifier> <assignable1> 219
<TK_IDEN,T,219> 219
TK_MEMBEROP <endassignable> 219
TK_ROOT <primitiveval> 219
e 219
<possiblestmts> <statements> 221
<validconditional> 221
<ifblock> TK_NEWLINE <elseifblock> 221
<ifstmt> TK_COLON <block> 221
TK_IF <boolexp> 221
<expor> <boolexp1> 221
<expand> <expor1> 221
<expnot> 221
<boolresult> 221
<exp> <relop> <exp> 221
<mulexp> <exp1> 221
<modexp> <mulexp1> 221
<baseexp> <modexp1> 221
<assignorfunc> 221
<identifier> <assignorfunc1> 221
<TK_IDEN,v,221> 221
e 221
e 221
e 221
e 221
TK_EQ 221
<mulexp> <exp1> 221
<modexp> <mulexp1> 221
<baseexp> <modexp1> 221
<assignorfunc> 221
<identifier> <assignorfunc1> 221
<TK_IDEN,e1,221> 221
<assignable1> 221
TK_MEMBEROP <endassignable> 221
TK_WEIGHT 221
e 221
e 221
e 221
e 221
e 221
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 222
<possiblestmts> <statements> 223
<validstatement> TK_NEWLINE 223
<letstmt> 223
TK_LET <assignable> TK_BE <equatable> 223
<identifier> <assignable1> 223
<TK_IDEN,z,223> 223
TK_MEMBEROP <endassignable> 223
<primitivetype> 223
TK_INT 223
<exp> 223
<mulexp> <exp1> 223
<modexp> <mulexp1> 223
<baseexp> <modexp1> 223
<assignorfunc> 223
<identifier> <assignorfunc1> 223
<TK_IDEN,v,223> 223
e 224
e 224
e 224
e 224
<possiblestmts> <statements> 224
<validstatement> TK_NEWLINE 224
<breakstmt> 224
TK_BREAK 224
e 225
e 227
e 227
<possiblestmts> <statements> 229
<validstatement> TK_NEWLINE 229
<iteration> 229
TK_FOR <loop> TK_COLON <block> 229
<identifier> <loop1> 229
<TK_IDEN,u,229> 229
TK_IN <iterable> 229
<identifier> <iterable1> 229
<TK_IDEN,T,229> 229
TK_ADJACENT TK_TO <assignable> 229
<identifier> <assignable1> 229
<TK_IDEN,T,229> 229
TK_MEMBEROP <endassignable> 229
TK_ROOT <primitiveval> 229
e 229
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 230
<possiblestmts> <statements> 231
<validstatement> TK_NEWLINE 231
<letstmt> 231
TK_LET <assignable> TK_BE <equatable> 231
<identifier> <assignable1> 231
<TK_IDEN,e1,231> 231
e 231
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 231
<identifier> <assignable1> 231
<TK_IDEN,u,231> 231
e 231
<identifier> <assignable1> 231
<TK_IDEN,T,231> 231
TK_MEMBEROP <endassignable> 231
TK_ROOT <primitiveval> 231
e 231
<possiblestmts> <statements> 233
<validconditional> 233
<ifblock> TK_NEWLINE <elseifblock> 233
<ifstmt> TK_COLON <block> 233
TK_IF <boolexp> 233
<expor> <boolexp1> 233
<expand> <expor1> 233
TK_NOT <expand> 233
<expnot> 233
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 233
<expor> <boolexp1> 233
<expand> <expor1> 233
<expnot> 233
<boolresult> 233
<exp> <relop> <exp> 233
<mulexp> <exp1> 233
<modexp> <mulexp1> 233
<baseexp> <modexp1> 233
<assignorfunc> 233
<identifier> <assignorfunc1> 233
<TK_IDEN,v,233> 233
e 233
e 233
e 233
e 233
TK_EQ 233
<mulexp> <exp1> 233
<modexp> <mulexp1> 233
<baseexp> <modexp1> 233
<assignorfunc> 233
<identifier> <assignorfunc1> 233
<TK_IDEN,e1,233> 233
<assignable1> 233
TK_MEMBEROP <endassignable> 233
TK_WEIGHT 233
e 233
e 233
e 233
e 233
e 233
e 233
e 233
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 234
<possiblestmts> <statements> 235
<validstatement> TK_NEWLINE 235
<letstmt> 235
TK_LET <assignable> TK_BE <equatable> 235
<identifier> <assignable1> 235
<TK_IDEN,answer,235> 235
e 235
<exp> 235
<mulexp> <exp1> 235
<modexp> <mulexp1> 235
<baseexp> <modexp1> 235
<assignorfunc> 235
<identifier> <assignorfunc1> 235
<TK_IDEN,e1,235> 235
<assignable1> 235
TK_MEMBEROP <endassignable> 235
TK_WEIGHT 235
e 236
e 236
e 236
e 236
e 238
e 238
e 240
TK_RETURN <returnable> 240
TK_NOTHING 240
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 244
<TK_IDEN,edgeWeight8,244> 244
e 244
TK_NOTHING 244
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 245
<possiblestmts> <statements> 247
<validstatement> TK_NEWLINE 247
<definestmt> 247
TK_DEFINE <defineargs> 247
<datatype> <identifier> <moreidens> 247
<primitivetype> 247
TK_INT 247
<TK_IDEN,answer,247> 247
e 248
<possiblestmts> <statements> 248
<validstatement> TK_NEWLINE 248
<definestmt> 248
TK_DEFINE <defineargs> 248
<datatype> <identifier> <moreidens> 248
<complextype> 248
TK_VERTEX 248
<TK_IDEN,z,248> 248
e 249
<possiblestmts> <statements> 249
<validstatement> TK_NEWLINE 249
<letstmt> 249
TK_LET <assignable> TK_BE <equatable> 249
<identifier> <assignable1> 249
<TK_IDEN,v,249> 249
e 249
<exp> 249
<mulexp> <exp1> 249
<modexp> <mulexp1> 249
<baseexp> <modexp1> 249
<literal> 249
<TK_INTLIT,5,249> 249
e 250
e 250
e 250
<possiblestmts> <statements> 251
<validstatement> TK_NEWLINE 251
<iteration> 251
TK_FOR <loop> TK_COLON <block> 251
<identifier> <loop1> 251
<TK_IDEN,u,251> 251
TK_IN <iterable> 251
<identifier> <iterable1> 251
<TK_IDEN,T,251> 251
TK_ADJACENT TK_TO <assignable> 251
<identifier> <assignable1> 251
<TK_IDEN,T,251> 251
TK_MEMBEROP <endassignable> 251
TK_ROOT <primitiveval> 251
e 251
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 252
<possiblestmts> <statements> 253
<validstatement> TK_NEWLINE 253
<letstmt> 253
TK_LET <assignable> TK_BE <equatable> 253
<identifier> <assignable1> 253
<TK_IDEN,e1,253> 253
e 253
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 253
<identifier> <assignable1> 253
<TK_IDEN,u,253> 253
e 253
<identifier> <assignable1> 253
<TK_IDEN,T,253> 253
TK_MEMBEROP <endassignable> 253
TK_ROOT <primitiveval> 253
e 253
<possiblestmts> <statements> 255
<validconditional> 255
<ifblock> TK_NEWLINE <elseifblock> 255
<ifstmt> TK_COLON <block> 255
TK_IF <boolexp> 255
<expor> <boolexp1> 255
<expand> <expor1> 255
<expnot> 255
<boolresult> 255
<exp> <relop> <exp> 255
<mulexp> <exp1> 255
<modexp> <mulexp1> 255
<baseexp> <modexp1> 255
<assignorfunc> 255
<identifier> <assignorfunc1> 255
<TK_IDEN,v,255> 255
e 255
e 255
e 255
e 255
TK_EQ 255
<mulexp> <exp1> 255
<modexp> <mulexp1> 255
<baseexp> <modexp1> 255
<assignorfunc> 255
<identifier> <assignorfunc1> 255
<TK_IDEN,e1,255> 255
<assignable1> 255
TK_MEMBEROP <endassignable> 255
TK_WEIGHT 255
e 255
e 255
e 255
e 255
e 255
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 256
<possiblestmts> <statements> 257
<validstatement> TK_NEWLINE 257
<letstmt> 257
TK_LET <assignable> TK_BE <equatable> 257
<identifier> <assignable1> 257
<TK_IDEN,z,257> 257
TK_MEMBEROP <endassignable> 257
<primitivetype> 257
TK_INT 257
<exp> 257
<mulexp> <exp1> 257
<modexp> <mulexp1> 257
<baseexp> <modexp1> 257
<assignorfunc> 257
<identifier> <assignorfunc1> 257
<TK_IDEN,v,257> 257
e 258
e 258
e 258
e 258
<possiblestmts> <statements> 258
<validstatement> TK_NEWLINE 258
<breakstmt> 258
TK_BREAK 258
e 259
e 261
e 261
<possiblestmts> <statements> 263
<validstatement> TK_NEWLINE 263
<iteration> 263
TK_FOR <loop> TK_COLON <block> 263
<identifier> <loop1> 263
<TK_IDEN,u,263> 263
TK_IN <iterable> 263
<identifier> <iterable1> 263
<TK_IDEN,T,263> 263
TK_ADJACENT TK_TO <assignable> 263
<identifier> <assignable1> 263
<TK_IDEN,T,263> 263
TK_MEMBEROP <endassignable> 263
TK_ROOT <primitiveval> 263
e 263
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 264
<possiblestmts> <statements> 265
<validstatement> TK_NEWLINE 265
<letstmt> 265
TK_LET <assignable> TK_BE <equatable> 265
<identifier> <assignable1> 265
<TK_IDEN,e1,265> 265
e 265
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 265
<identifier> <assignable1> 265
<TK_IDEN,u,265> 265
e 265
<identifier> <assignable1> 265
<TK_IDEN,T,265> 265
TK_MEMBEROP <endassignable> 265
TK_ROOT <primitiveval> 265
e 265
<possiblestmts> <statements> 267
<validconditional> 267
<ifblock> TK_NEWLINE <elseifblock> 267
<ifstmt> TK_COLON <block> 267
TK_IF <boolexp> 267
<expor> <boolexp1> 267
<expand> <expor1> 267
TK_NOT <expand> 267
<expnot> 267
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 267
<expor> <boolexp1> 267
<expand> <expor1> 267
<expnot> 267
<boolresult> 267
<exp> <relop> <exp> 267
<mulexp> <exp1> 267
<modexp> <mulexp1> 267
<baseexp> <modexp1> 267
<assignorfunc> 267
<identifier> <assignorfunc1> 267
<TK_IDEN,v,267> 267
e 267
e 267
e 267
e 267
TK_EQ 267
<mulexp> <exp1> 267
<modexp> <mulexp1> 267
<baseexp> <modexp1> 267
<assignorfunc> 267
<identifier> <assignorfunc1> 267
<TK_IDEN,e1,267> 267
<assignable1> 267
TK_MEMBEROP <endassignable> 267
TK_WEIGHT 267
e 267
e 267
e 267
e 267
e 267
e 267
e 267
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 268
<possiblestmts> <statements> 269
<validstatement> TK_NEWLINE 269
<letstmt> 269
TK_LET <assignable> TK_BE <equatable> 269
<identifier> <assignable1> 269
<TK_IDEN,answer,269> 269
e 269
<exp> 269
<mulexp> <exp1> 269
<modexp> <mulexp1> 269
<baseexp> <modexp1> 269
<assignorfunc> 269
<identifier> <assignorfunc1> 269
<TK_IDEN,e1,269> 269
<assignable1> 269
TK_MEMBEROP <endassignable> 269
TK_WEIGHT 269
e 270
e 270
e 270
e 270
e 272
e 272
e 274
TK_RETURN <returnable> 274
TK_NOTHING 274
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 278
<TK_IDEN,edgeWeight9,278> 278
e 278
TK_NOTHING 278
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 279
<possiblestmts> <statements> 281
<validstatement> TK_NEWLINE 281
<definestmt> 281
TK_DEFINE <defineargs> 281
<datatype> <identifier> <moreidens> 281
<primitivetype> 281
TK_INT 281
<TK_IDEN,answer,281> 281
e 282
<possiblestmts> <statements> 282
<validstatement> TK_NEWLINE 282
<definestmt> 282
TK_DEFINE <defineargs> 282
<datatype> <identifier> <moreidens> 282
<complextype> 282
TK_VERTEX 282
<TK_IDEN,z,282> 282
e 283
<possiblestmts> <statements> 283
<validstatement> TK_NEWLINE 283
<letstmt> 283
TK_LET <assignable> TK_BE <equatable> 283
<identifier> <assignable1> 283
<TK_IDEN,v,283> 283
e 283
<exp> 283
<mulexp> <exp1> 283
<modexp> <mulexp1> 283
<baseexp> <modexp1> 283
<literal> 283
<TK_INTLIT,5,283> 283
e 284
e 284
e 284
<possiblestmts> <statements> 285
<validstatement> TK_NEWLINE 285
<iteration> 285
TK_FOR <loop> TK_COLON <block> 285
<identifier> <loop1> 285
<TK_IDEN,u,285> 285
TK_IN <iterable> 285
<identifier> <iterable1> 285
<TK_IDEN,T,285> 285
TK_ADJACENT TK_TO <assignable> 285
<identifier> <assignable1> 285
<TK_IDEN,T,285> 285
TK_MEMBEROP <endassignable> 285
TK_ROOT <primitiveval> 285
e 285
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 286
<possiblestmts> <statements> 287
<validstatement> TK_NEWLINE 287
<letstmt> 287
TK_LET <assignable> TK_BE <equatable> 287
<identifier> <assignable1> 287
<TK_IDEN,e1,287> 287
e 287
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 287
<identifier> <assignable1> 287
<TK_IDEN,u,287> 287
e 287
<identifier> <assignable1> 287
<TK_IDEN,T,287> 287
TK_MEMBEROP <endassignable> 287
TK_ROOT <primitiveval> 287
e 287
<possiblestmts> <statements> 289
<validconditional> 289
<ifblock> TK_NEWLINE <elseifblock> 289
<ifstmt> TK_COLON <block> 289
TK_IF <boolexp> 289
<expor> <boolexp1> 289
<expand> <expor1> 289
<expnot> 289
<boolresult> 289
<exp> <relop> <exp> 289
<mulexp> <exp1> 289
<modexp> <mulexp1> 289
<baseexp> <modexp1> 289
<assignorfunc> 289
<identifier> <assignorfunc1> 289
<TK_IDEN,v,289> 289
e 289
e 289
e 289
e 289
TK_EQ 289
<mulexp> <exp1> 289
<modexp> <mulexp1> 289
<baseexp> <modexp1> 289
<assignorfunc> 289
<identifier> <assignorfunc1> 289
<TK_IDEN,e1,289> 289
<assignable1> 289
TK_MEMBEROP <endassignable> 289
TK_WEIGHT 289
e 289
e 289
e 289
e 289
e 289
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 290
<possiblestmts> <statements> 291
<validstatement> TK_NEWLINE 291
<letstmt> 291
TK_LET <assignable> TK_BE <equatable> 291
<identifier> <assignable1> 291
<TK_IDEN,z,291> 291
TK_MEMBEROP <endassignable> 291
<primitivetype> 291
TK_INT 291
<exp> 291
<mulexp> <exp1> 291
<modexp> <mulexp1> 291
<baseexp> <modexp1> 291
<assignorfunc> 291
<identifier> <assignorfunc1> 291
<TK_IDEN,v,291> 291
e 292
e 292
e 292
e 292
<possiblestmts> <statements> 292
<validstatement> TK_NEWLINE 292
<breakstmt> 292
TK_BREAK 292
e 293
e 295
e 295
<possiblestmts> <statements> 297
<validstatement> TK_NEWLINE 297
<iteration> 297
TK_FOR <loop> TK_COLON <block> 297
<identifier> <loop1> 297
<TK_IDEN,u,297> 297
TK_IN <iterable> 297
<identifier> <iterable1> 297
<TK_IDEN,T,297> 297
TK_ADJACENT TK_TO <assignable> 297
<identifier> <assignable1> 297
<TK_IDEN,T,297> 297
TK_MEMBEROP <endassignable> 297
TK_ROOT <primitiveval> 297
e 297
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 298
<possiblestmts> <statements> 299
<validstatement> TK_NEWLINE 299
<letstmt> 299
TK_LET <assignable> TK_BE <equatable> 299
<identifier> <assignable1> 299
<TK_IDEN,e1,299> 299
e 299
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 299
<identifier> <assignable1> 299
<TK_IDEN,u,299> 299
e 299
<identifier> <assignable1> 299
<TK_IDEN,T,299> 299
TK_MEMBEROP <endassignable> 299
TK_ROOT <primitiveval> 299
e 299
<possiblestmts> <statements> 301
<validconditional> 301
<ifblock> TK_NEWLINE <elseifblock> 301
<ifstmt> TK_COLON <block> 301
TK_IF <boolexp> 301
<expor> <boolexp1> 301
<expand> <expor1> 301
TK_NOT <expand> 301
<expnot> 301
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 301
<expor> <boolexp1> 301
<expand> <expor1> 301
<expnot> 301
<boolresult> 301
<exp> <relop> <exp> 301
<mulexp> <exp1> 301
<modexp> <mulexp1> 301
<baseexp> <modexp1> 301
<assignorfunc> 301
<identifier> <assignorfunc1> 301
<TK_IDEN,v,301> 301
e 301
e 301
e 301
e 301
TK_EQ 301
<mulexp> <exp1> 301
<modexp> <mulexp1> 301
<baseexp> <modexp1> 301
<assignorfunc> 301
<identifier> <assignorfunc1> 301
<TK_IDEN,e1,301> 301
<assignable1> 301
TK_MEMBEROP <endassignable> 301
TK_WEIGHT 301
e 301
e 301
e 301
e 301
e 301
e 301
e 301
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 302
<possiblestmts> <statements> 303
<validstatement> TK_NEWLINE 303
<letstmt> 303
TK_LET <assignable> TK_BE <equatable> 303
<identifier> <assignable1> 303
<TK_IDEN,answer,303> 303
e 303
<exp> 303
<mulexp> <exp1> 303
<modexp> <mulexp1> 303
<baseexp> <modexp1> 303
<assignorfunc> 303
<identifier> <assignorfunc1> 303
<TK_IDEN,e1,303> 303
<assignable1> 303
TK_MEMBEROP <endassignable> 303
TK_WEIGHT 303
e 304
e 304
e 304
e 304
e 306
e 306
e 308
TK_RETURN <returnable> 308
TK_NOTHING 308
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 312
<TK_IDEN,edgeWeight10,312> 312
e 312
TK_NOTHING 312
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 313
<possiblestmts> <statements> 315
<validstatement> TK_NEWLINE 315
<definestmt> 315
TK_DEFINE <defineargs> 315
<datatype> <identifier> <moreidens> 315
<primitivetype> 315
TK_INT 315
<TK_IDEN,answer,315> 315
e 316
<possiblestmts> <statements> 316
<validstatement> TK_NEWLINE 316
<definestmt> 316
TK_DEFINE <defineargs> 316
<datatype> <identifier> <moreidens> 316
<complextype> 316
TK_VERTEX 316
<TK_IDEN,z,316> 316
e 317
<possiblestmts> <statements> 317
<validstatement> TK_NEWLINE 317
<letstmt> 317
TK_LET <assignable> TK_BE <equatable> 317
<identifier> <assignable1> 317
<TK_IDEN,v,317> 317
e 317
<exp> 317
<mulexp> <exp1> 317
<modexp> <mulexp1> 317
<baseexp> <modexp1> 317
<literal> 317
<TK_INTLIT,5,317> 317
e 318
e 318
e 318
<possiblestmts> <statements> 319
<validstatement> TK_NEWLINE 319
<iteration> 319
TK_FOR <loop> TK_COLON <block> 319
<identifier> <loop1> 319
<TK_IDEN,u,319> 319
TK_IN <iterable> 319
<identifier> <iterable1> 319
<TK_IDEN,T,319> 319
TK_ADJACENT TK_TO <assignable> 319
<identifier> <assignable1> 319
<TK_IDEN,T,319> 319
TK_MEMBEROP <endassignable> 319
TK_ROOT <primitiveval> 319
e 319
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 320
<possiblestmts> <statements> 321
<validstatement> TK_NEWLINE 321
<letstmt> 321
TK_LET <assignable> TK_BE <equatable> 321
<identifier> <assignable1> 321
<TK_IDEN,e1,321> 321
e 321
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 321
<identifier> <assignable1> 321
<TK_IDEN,u,321> 321
e 321
<identifier> <assignable1> 321
<TK_IDEN,T,321> 321
TK_MEMBEROP <endassignable> 321
TK_ROOT <primitiveval> 321
e 321
<possiblestmts> <statements> 323
<validconditional> 323
<ifblock> TK_NEWLINE <elseifblock> 323
<ifstmt> TK_COLON <block> 323
TK_IF <boolexp> 323
<expor> <boolexp1> 323
<expand> <expor1> 323
<expnot> 323
<boolresult> 323
<exp> <relop> <exp> 323
<mulexp> <exp1> 323
<modexp> <mulexp1> 323
<baseexp> <modexp1> 323
<assignorfunc> 323
<identifier> <assignorfunc1> 323
<TK_IDEN,v,323> 323
e 323
e 323
e 323
e 323
TK_EQ 323
<mulexp> <exp1> 323
<modexp> <mulexp1> 323
<baseexp> <modexp1> 323
<assignorfunc> 323
<identifier> <assignorfunc1> 323
<TK_IDEN,e1,323> 323
<assignable1> 323
TK_MEMBEROP <endassignable> 323
TK_WEIGHT 323
e 323
e 323
e 323
e 323
e 323
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 324
<possiblestmts> <statements> 325
<validstatement> TK_NEWLINE 325
<letstmt> 325
TK_LET <assignable> TK_BE <equatable> 325
<identifier> <assignable1> 325
<TK_IDEN,z,325> 325
TK_MEMBEROP <endassignable> 325
<primitivetype> 325
TK_INT 325
<exp> 325
<mulexp> <exp1> 325
<modexp> <mulexp1> 325
<baseexp> <modexp1> 325
<assignorfunc> 325
<identifier> <assignorfunc1> 325
<TK_IDEN,v,325> 325
e 326
e 326
e 326
e 326
<possiblestmts> <statements> 326
<validstatement> TK_NEWLINE 326
<breakstmt> 326
TK_BREAK 326
e 327
e 329
e 329
<possiblestmts> <statements> 331
<validstatement> TK_NEWLINE 331
<iteration> 331
TK_FOR <loop> TK_COLON <block> 331
<identifier> <loop1> 331
<TK_IDEN,u,331> 331
TK_IN <iterable> 331
<identifier> <iterable1> 331
<TK_IDEN,T,331> 331
TK_ADJACENT TK_TO <assignable> 331
<identifier> <assignable1> 331
<TK_IDEN,T,331> 331
TK_MEMBEROP <endassignable> 331
TK_ROOT <primitiveval> 331
e 331
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 332
<possiblestmts> <statements> 333
<validstatement> TK_NEWLINE 333
<letstmt> 333
TK_LET <assignable> TK_BE <equatable> 333
<identifier> <assignable1> 333
<TK_IDEN,e1,333> 333
e 333
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 333
<identifier> <assignable1> 333
<TK_IDEN,u,333> 333
e 333
<identifier> <assignable1> 333
<TK_IDEN,T,333> 333
TK_MEMBEROP <endassignable> 333
TK_ROOT <primitiveval> 333
e 333
<possiblestmts> <statements> 335
<validconditional> 335
<ifblock> TK_NEWLINE <elseifblock> 335
<ifstmt> TK_COLON <block> 335
TK_IF <boolexp> 335
<expor> <boolexp1> 335
<expand> <expor1> 335
TK_NOT <expand> 335
<expnot> 335
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 335
<expor> <boolexp1> 335
<expand> <expor1> 335
<expnot> 335
<boolresult> 335
<exp> <relop> <exp> 335
<mulexp> <exp1> 335
<modexp> <mulexp1> 335
<baseexp> <modexp1> 335
<assignorfunc> 335
<identifier> <assignorfunc1> 335
<TK_IDEN,v,335> 335
e 335
e 335
e 335
e 335
TK_EQ 335
<mulexp> <exp1> 335
<modexp> <mulexp1> 335
<baseexp> <modexp1> 335
<assignorfunc> 335
<identifier> <assignorfunc1> 335
<TK_IDEN,e1,335> 335
<assignable1> 335
TK_MEMBEROP <endassignable> 335
TK_WEIGHT 335
e 335
e 335
e 335
e 335
e 335
e 335
e 335
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 336
<possiblestmts> <statements> 337
<validstatement> TK_NEWLINE 337
<letstmt> 337
TK_LET <assignable> TK_BE <equatable> 337
<identifier> <assignable1> 337
<TK_IDEN,answer,337> 337
e 337
<exp> 337
<mulexp> <exp1> 337
<modexp> <mulexp1> 337
<baseexp> <modexp1> 337
<assignorfunc> 337
<identifier> <assignorfunc1> 337
<TK_IDEN,e1,337> 337
<assignable1> 337
TK_MEMBEROP <endassignable> 337
TK_WEIGHT 337
e 338
e 338
e 338
e 338
e 340
e 340
e 342
TK_RETURN <returnable> 342
TK_NOTHING 342
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 346
<TK_IDEN,edgeWeight11,346> 346
e 346
TK_NOTHING 346
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 347
<possiblestmts> <statements> 349
<validstatement> TK_NEWLINE 349
<definestmt> 349
TK_DEFINE <defineargs> 349
<datatype> <identifier> <moreidens> 349
<primitivetype> 349
TK_INT 349
<TK_IDEN,answer,349> 349
e 350
<possiblestmts> <statements> 350
<validstatement> TK_NEWLINE 350
<definestmt> 350
TK_DEFINE <defineargs> 350
<datatype> <identifier> <moreidens> 350
<complextype> 350
TK_VERTEX 350
<TK_IDEN,z,350> 350
e 351
<possiblestmts> <statements> 351
<validstatement> TK_NEWLINE 351
<letstmt> 351
TK_LET <assignable> TK_BE <equatable> 351
<identifier> <assignable1> 351
<TK_IDEN,v,351> 351
e 351
<exp> 351
<mulexp> <exp1> 351
<modexp> <mulexp1> 351
<baseexp> <modexp1> 351
<literal> 351
<TK_INTLIT,5,351> 351
e 352
e 352
e 352
<possiblestmts> <statements> 353
<validstatement> TK_NEWLINE 353
<iteration> 353
TK_FOR <loop> TK_COLON <block> 353
<identifier> <loop1> 353
<TK_IDEN,u,353> 353
TK_IN <iterable> 353
<identifier> <iterable1> 353
<TK_IDEN,T,353> 353
TK_ADJACENT TK_TO <assignable> 353
<identifier> <assignable1> 353
<TK_IDEN,T,353> 353
TK_MEMBEROP <endassignable> 353
TK_ROOT <primitiveval> 353
e 353
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 354
<possiblestmts> <statements> 355
<validstatement> TK_NEWLINE 355
<letstmt> 355
TK_LET <assignable> TK_BE <equatable> 355
<identifier> <assignable1> 355
<TK_IDEN,e1,355> 355
e 355
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 355
<identifier> <assignable1> 355
<TK_IDEN,u,355> 355
e 355
<identifier> <assignable1> 355
<TK_IDEN,T,355> 355
TK_MEMBEROP <endassignable> 355
TK_ROOT <primitiveval> 355
e 355
<possiblestmts> <statements> 357
<validconditional> 357
<ifblock> TK_NEWLINE <elseifblock> 357
<ifstmt> TK_COLON <block> 357
TK_IF <boolexp> 357
<expor> <boolexp1> 357
<expand> <expor1> 357
<expnot> 357
<boolresult> 357
<exp> <relop> <exp> 357
<mulexp> <exp1> 357
<modexp> <mulexp1> 357
<baseexp> <modexp1> 357
<assignorfunc> 357
<identifier> <assignorfunc1> 357
<TK_IDEN,v,357> 357
e 357
e 357
e 357
e 357
TK_EQ 357
<mulexp> <exp1> 357
<modexp> <mulexp1> 357
<baseexp> <modexp1> 357
<assignorfunc> 357
<identifier> <assignorfunc1> 357
<TK_IDEN,e1,357> 357
<assignable1> 357
TK_MEMBEROP <endassignable> 357
TK_WEIGHT 357
e 357
e 357
e 357
e 357
e 357
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 358
<possiblestmts> <statements> 359
<validstatement> TK_NEWLINE 359
<letstmt> 359
TK_LET <assignable> TK_BE <equatable> 359
<identifier> <assignable1> 359
<TK_IDEN,z,359> 359
TK_MEMBEROP <endassignable> 359
<primitivetype> 359
TK_INT 359
<exp> 359
<mulexp> <exp1> 359
<modexp> <mulexp1> 359
<baseexp> <modexp1> 359
<assignorfunc> 359
<identifier> <assignorfunc1> 359
<TK_IDEN,v,359> 359
e 360
e 360
e 360
e 360
<possiblestmts> <statements> 360
<validstatement> TK_NEWLINE 360
<breakstmt> 360
TK_BREAK 360
e 361
e 363
e 363
<possiblestmts> <statements> 365
<validstatement> TK_NEWLINE 365
<iteration> 365
TK_FOR <loop> TK_COLON <block> 365
<identifier> <loop1> 365
<TK_IDEN,u,365> 365
TK_IN <iterable> 365
<identifier> <iterable1> 365
<TK_IDEN,T,365> 365
TK_ADJACENT TK_TO <assignable> 365
<identifier> <assignable1> 365
<TK_IDEN,T,365> 365
TK_MEMBEROP <endassignable> 365
TK_ROOT <primitiveval> 365
e 365
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 366
<possiblestmts> <statements> 367
<validstatement> TK_NEWLINE 367
<letstmt> 367
TK_LET <assignable> TK_BE <equatable> 367
<identifier> <assignable1> 367
<TK_IDEN,e1,367> 367
e 367
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 367
<identifier> <assignable1> 367
<TK_IDEN,u,367> 367
e 367
<identifier> <assignable1> 367
<TK_IDEN,T,367> 367
TK_MEMBEROP <endassignable> 367
TK_ROOT <primitiveval> 367
e 367
<possiblestmts> <statements> 369
<validconditional> 369
<ifblock> TK_NEWLINE <elseifblock> 369
<ifstmt> TK_COLON <block> 369
TK_IF <boolexp> 369
<expor> <boolexp1> 369
<expand> <expor1> 369
TK_NOT <expand> 369
<expnot> 369
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 369
<expor> <boolexp1> 369
<expand> <expor1> 369
<expnot> 369
<boolresult> 369
<exp> <relop> <exp> 369
<mulexp> <exp1> 369
<modexp> <mulexp1> 369
<baseexp> <modexp1> 369
<assignorfunc> 369
<identifier> <assignorfunc1> 369
<TK_IDEN,v,369> 369
e 369
e 369
e 369
e 369
TK_EQ 369
<mulexp> <exp1> 369
<modexp> <mulexp1> 369
<baseexp> <modexp1> 369
<assignorfunc> 369
<identifier> <assignorfunc1> 369
<TK_IDEN,e1,369> 369
<assignable1> 369
TK_MEMBEROP <endassignable> 369
TK_WEIGHT 369
e 369
e 369
e 369
e 369
e 369
e 369
e 369
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 370
<possiblestmts> <statements> 371
<validstatement> TK_NEWLINE 371
<letstmt> 371
TK_LET <assignable> TK_BE <equatable> 371
<identifier> <assignable1> 371
<TK_IDEN,answer,371> 371
e 371
<exp> 371
<mulexp> <exp1> 371
<modexp> <mulexp1> 371
<baseexp> <modexp1> 371
<assignorfunc> 371
<identifier> <assignorfunc1> 371
<TK_IDEN,e1,371> 371
<assignable1> 371
TK_MEMBEROP <endassignable> 371
TK_WEIGHT 371
e 372
e 372
e 372
e 372
e 374
e 374
e 376
TK_RETURN <returnable> 376
TK_NOTHING 376
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 380
<TK_IDEN,edgeWeight12,380> 380
e 380
TK_NOTHING 380
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 381
<possiblestmts> <statements> 383
<validstatement> TK_NEWLINE 383
<definestmt> 383
TK_DEFINE <defineargs> 383
<datatype> <identifier> <moreidens> 383
<primitivetype> 383
TK_INT 383
<TK_IDEN,answer,383> 383
e 384
<possiblestmts> <statements> 384
<validstatement> TK_NEWLINE 384
<definestmt> 384
TK_DEFINE <defineargs> 384
<datatype> <identifier> <moreidens> 384
<complextype> 384
TK_VERTEX 384
<TK_IDEN,z,384> 384
e 385
<possiblestmts> <statements> 385
<validstatement> TK_NEWLINE 385
<letstmt> 385
TK_LET <assignable> TK_BE <equatable> 385
<identifier> <assignable1> 385
<TK_IDEN,v,385> 385
e 385
<exp> 385
<mulexp> <exp1> 385
<modexp> <mulexp1> 385
<baseexp> <modexp1> 385
<literal> 385
<TK_INTLIT,5,385> 385
e 386
e 386
e 386
<possiblestmts> <statements> 387
<validstatement> TK_NEWLINE 387
<iteration> 387
TK_FOR <loop> TK_COLON <block> 387
<identifier> <loop1> 387
<TK_IDEN,u,387> 387
TK_IN <iterable> 387
<identifier> <iterable1> 387
<TK_IDEN,T,387> 387
TK_ADJACENT TK_TO <assignable> 387
<identifier> <assignable1> 387
<TK_IDEN,T,387> 387
TK_MEMBEROP <endassignable> 387
TK_ROOT <primitiveval> 387
e 387
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 388
<possiblestmts> <statements> 389
<validstatement> TK_NEWLINE 389
<letstmt> 389
TK_LET <assignable> TK_BE <equatable> 389
<identifier> <assignable1> 389
<TK_IDEN,e1,389> 389
e 389
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 389
<identifier> <assignable1> 389
<TK_IDEN,u,389> 389
e 389
<identifier> <assignable1> 389
<TK_IDEN,T,389> 389
TK_MEMBEROP <endassignable> 389
TK_ROOT <primitiveval> 389
e 389
<possiblestmts> <statements> 391
<validconditional> 391
<ifblock> TK_NEWLINE <elseifblock> 391
<ifstmt> TK_COLON <block> 391
TK_IF <boolexp> 391
<expor> <boolexp1> 391
<expand> <expor1> 391
<expnot> 391
<boolresult> 391
<exp> <relop> <exp> 391
<mulexp> <exp1> 391
<modexp> <mulexp1> 391
<baseexp> <modexp1> 391
<assignorfunc> 391
<identifier> <assignorfunc1> 391
<TK_IDEN,v,391> 391
e 391
e 391
e 391
e 391
TK_EQ 391
<mulexp> <exp1> 391
<modexp> <mulexp1> 391
<baseexp> <modexp1> 391
<assignorfunc> 391
<identifier> <assignorfunc1> 391
<TK_IDEN,e1,391> 391
<assignable1> 391
TK_MEMBEROP <endassignable> 391
TK_WEIGHT 391
e 391
e 391
e 391
e 391
e 391
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 392
<possiblestmts> <statements> 393
<validstatement> TK_NEWLINE 393
<letstmt> 393
TK_LET <assignable> TK_BE <equatable> 393
<identifier> <assignable1> 393
<TK_IDEN,z,393> 393
TK_MEMBEROP <endassignable> 393
<primitivetype> 393
TK_INT 393
<exp> 393
<mulexp> <exp1> 393
<modexp> <mulexp1> 393
<baseexp> <modexp1> 393
<assignorfunc> 393
<identifier> <assignorfunc1> 393
<TK_IDEN,v,393> 393
e 394
e 394
e 394
e 394
<possiblestmts> <statements> 394
<validstatement> TK_NEWLINE 394
<breakstmt> 394
TK_BREAK 394
e 395
e 397
e 397
<possiblestmts> <statements> 399
<validstatement> TK_NEWLINE 399
<iteration> 399
TK_FOR <loop> TK_COLON <block> 399
<identifier> <loop1> 399
<TK_IDEN,u,399> 399
TK_IN <iterable> 399
<identifier> <iterable1> 399
<TK_IDEN,T,399> 399
TK_ADJACENT TK_TO <assignable> 399
<identifier> <assignable1> 399
<TK_IDEN,T,399> 399
TK_MEMBEROP <endassignable> 399
TK_ROOT <primitiveval> 399
e 399
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 400
<possiblestmts> <statements> 401
<validstatement> TK_NEWLINE 401
<letstmt> 401
TK_LET <assignable> TK_BE <equatable> 401
<identifier> <assignable1> 401
<TK_IDEN,e1,401> 401
e 401
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 401
<identifier> <assignable1> 401
<TK_IDEN,u,401> 401
e 401
<identifier> <assignable1> 401
<TK_IDEN,T,401> 401
TK_MEMBEROP <endassignable> 401
TK_ROOT <primitiveval> 401
e 401
<possiblestmts> <statements> 403
<validconditional> 403
<ifblock> TK_NEWLINE <elseifblock> 403
<ifstmt> TK_COLON <block> 403
TK_IF <boolexp> 403
<expor> <boolexp1> 403
<expand> <expor1> 403
TK_NOT <expand> 403
<expnot> 403
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 403
<expor> <boolexp1> 403
<expand> <expor1> 403
<expnot> 403
<boolresult> 403
<exp> <relop> <exp> 403
<mulexp> <exp1> 403
<modexp> <mulexp1> 403
<baseexp> <modexp1> 403
<assignorfunc> 403
<identifier> <assignorfunc1> 403
<TK_IDEN,v,403> 403
e 403
e 403
e 403
e 403
TK_EQ 403
<mulexp> <exp1> 403
<modexp> <mulexp1> 403
<baseexp> <modexp1> 403
<assignorfunc> 403
<identifier> <assignorfunc1> 403
<TK_IDEN,e1,403> 403
<assignable1> 403
TK_MEMBEROP <endassignable> 403
TK_WEIGHT 403
e 403
e 403
e 403
e 403
e 403
e 403
e 403
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 404
<possiblestmts> <statements> 405
<validstatement> TK_NEWLINE 405
<letstmt> 405
TK_LET <assignable> TK_BE <equatable> 405
<identifier> <assignable1> 405
<TK_IDEN,answer,405> 405
e 405
<exp> 405
<mulexp> <exp1> 405
<modexp> <mulexp1> 405
<baseexp> <modexp1> 405
<assignorfunc> 405
<identifier> <assignorfunc1> 405
<TK_IDEN,e1,405> 405
<assignable1> 405
TK_MEMBEROP <endassignable> 405
TK_WEIGHT 405
e 406
e 406
e 406
e 406
e 408
e 408
e 410
TK_RETURN <returnable> 410
TK_NOTHING 410
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 414
<TK_IDEN,edgeWeight13,414> 414
e 414
TK_NOTHING 414
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 415
<possiblestmts> <statements> 417
<validstatement> TK_NEWLINE 417
<definestmt> 417
TK_DEFINE <defineargs> 417
<datatype> <identifier> <moreidens> 417
<primitivetype> 417
TK_INT 417
<TK_IDEN,answer,417> 417
e 418
<possiblestmts> <statements> 418
<validstatement> TK_NEWLINE 418
<definestmt> 418
TK_DEFINE <defineargs> 418
<datatype> <identifier> <moreidens> 418
<complextype> 418
TK_VERTEX 418
<TK_IDEN,z,418> 418
e 419
<possiblestmts> <statements> 419
<validstatement> TK_NEWLINE 419
<letstmt> 419
TK_LET <assignable> TK_BE <equatable> 419
<identifier> <assignable1> 419
<TK_IDEN,v,419> 419
e 419
<exp> 419
<mulexp> <exp1> 419
<modexp> <mulexp1> 419
<baseexp> <modexp1> 419
<literal> 419
<TK_INTLIT,5,419> 419
e 420
e 420
e 420
<possiblestmts> <statements> 421
<validstatement> TK_NEWLINE 421
<iteration> 421
TK_FOR <loop> TK_COLON <block> 421
<identifier> <loop1> 421
<TK_IDEN,u,421> 421
TK_IN <iterable> 421
<identifier> <iterable1> 421
<TK_IDEN,T,421> 421
TK_ADJACENT TK_TO <assignable> 421
<identifier> <assignable1> 421
<TK_IDEN,T,421> 421
TK_MEMBEROP <endassignable> 421
TK_ROOT <primitiveval> 421
e 421
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 422
<possiblestmts> <statements> 423
<validstatement> TK_NEWLINE 423
<letstmt> 423
TK_LET <assignable> TK_BE <equatable> 423
<identifier> <assignable1> 423
<TK_IDEN,e1,423> 423
e 423
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 423
<identifier> <assignable1> 423
<TK_IDEN,u,423> 423
e 423
<identifier> <assignable1> 423
<TK_IDEN,T,423> 423
TK_MEMBEROP <endassignable> 423
TK_ROOT <primitiveval> 423
e 423
<possiblestmts> <statements> 425
<validconditional> 425
<ifblock> TK_NEWLINE <elseifblock> 425
<ifstmt> TK_COLON <block> 425
TK_IF <boolexp> 425
<expor> <boolexp1> 425
<expand> <expor1> 425
<expnot> 425
<boolresult> 425
<exp> <relop> <exp> 425
<mulexp> <exp1> 425
<modexp> <mulexp1> 425
<baseexp> <modexp1> 425
<assignorfunc> 425
<identifier> <assignorfunc1> 425
<TK_IDEN,v,425> 425
e 425
e 425
e 425
e 425
TK_EQ 425
<mulexp> <exp1> 425
<modexp> <mulexp1> 425
<baseexp> <modexp1> 425
<assignorfunc> 425
<identifier> <assignorfunc1> 425
<TK_IDEN,e1,425> 425
<assignable1> 425
TK_MEMBEROP <endassignable> 425
TK_WEIGHT 425
e 425
e 425
e 425
e 425
e 425
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 426
<possiblestmts> <statements> 427
<validstatement> TK_NEWLINE 427
<letstmt> 427
TK_LET <assignable> TK_BE <equatable> 427
<identifier> <assignable1> 427
<TK_IDEN,z,427> 427
TK_MEMBEROP <endassignable> 427
<primitivetype> 427
TK_INT 427
<exp> 427
<mulexp> <exp1> 427
<modexp> <mulexp1> 427
<baseexp> <modexp1> 427
<assignorfunc> 427
<identifier> <assignorfunc1> 427
<TK_IDEN,v,427> 427
e 428
e 428
e 428
e 428
<possiblestmts> <statements> 428
<validstatement> TK_NEWLINE 428
<breakstmt> 428
TK_BREAK 428
e 429
e 431
e 431
<possiblestmts> <statements> 433
<validstatement> TK_NEWLINE 433
<iteration> 433
TK_FOR <loop> TK_COLON <block> 433
<identifier> <loop1> 433
<TK_IDEN,u,433> 433
TK_IN <iterable> 433
<identifier> <iterable1> 433
<TK_IDEN,T,433> 433
TK_ADJACENT TK_TO <assignable> 433
<identifier> <assignable1> 433
<TK_IDEN,T,433> 433
TK_MEMBEROP <endassignable> 433
TK_ROOT <primitiveval> 433
e 433
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 434
<possiblestmts> <statements> 435
<validstatement> TK_NEWLINE 435
<letstmt> 435
TK_LET <assignable> TK_BE <equatable> 435
<identifier> <assignable1> 435
<TK_IDEN,e1,435> 435
e 435
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 435
<identifier> <assignable1> 435
<TK_IDEN,u,435> 435
e 435
<identifier> <assignable1> 435
<TK_IDEN,T,435> 435
TK_MEMBEROP <endassignable> 435
TK_ROOT <primitiveval> 435
e 435
<possiblestmts> <statements> 437
<validconditional> 437
<ifblock> TK_NEWLINE <elseifblock> 437
<ifstmt> TK_COLON <block> 437
TK_IF <boolexp> 437
<expor> <boolexp1> 437
<expand> <expor1> 437
TK_NOT <expand> 437
<expnot> 437
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 437
<expor> <boolexp1> 437
<expand> <expor1> 437
<expnot> 437
<boolresult> 437
<exp> <relop> <exp> 437
<mulexp> <exp1> 437
<modexp> <mulexp1> 437
<baseexp> <modexp1> 437
<assignorfunc> 437
<identifier> <assignorfunc1> 437
<TK_IDEN,v,437> 437
e 437
e 437
e 437
e 437
TK_EQ 437
<mulexp> <exp1> 437
<modexp> <mulexp1> 437
<baseexp> <modexp1> 437
<assignorfunc> 437
<identifier> <assignorfunc1> 437
<TK_IDEN,e1,437> 437
<assignable1> 437
TK_MEMBEROP <endassignable> 437
TK_WEIGHT 437
e 437
e 437
e 437
e 437
e 437
e 437
e 437
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 438
<possiblestmts> <statements> 439
<validstatement> TK_NEWLINE 439
<letstmt> 439
TK_LET <assignable> TK_BE <equatable> 439
<identifier> <assignable1> 439
<TK_IDEN,answer,439> 439
e 439
<exp> 439
<mulexp> <exp1> 439
<modexp> <mulexp1> 439
<baseexp> <modexp1> 439
<assignorfunc> 439
<identifier> <assignorfunc1> 439
<TK_IDEN,e1,439> 439
<assignable1> 439
TK_MEMBEROP <endassignable> 439
TK_WEIGHT 439
e 440
e 440
e 440
e 440
e 442
e 442
e 444
TK_RETURN <returnable> 444
TK_NOTHING 444
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 448
<TK_IDEN,edgeWeight14,448> 448
e 448
TK_NOTHING 448
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 449
<possiblestmts> <statements> 451
<validstatement> TK_NEWLINE 451
<definestmt> 451
TK_DEFINE <defineargs> 451
<datatype> <identifier> <moreidens> 451
<primitivetype> 451
TK_INT 451
<TK_IDEN,answer,451> 451
e 452
<possiblestmts> <statements> 452
<validstatement> TK_NEWLINE 452
<definestmt> 452
TK_DEFINE <defineargs> 452
<datatype> <identifier> <moreidens> 452
<complextype> 452
TK_VERTEX 452
<TK_IDEN,z,452> 452
e 453
<possiblestmts> <statements> 453
<validstatement> TK_NEWLINE 453
<letstmt> 453
TK_LET <assignable> TK_BE <equatable> 453
<identifier> <assignable1> 453
<TK_IDEN,v,453> 453
e 453
<exp> 453
<mulexp> <exp1> 453
<modexp> <mulexp1> 453
<baseexp> <modexp1> 453
<literal> 453
<TK_INTLIT,5,453> 453
e 454
e 454
e 454
<possiblestmts> <statements> 455
<validstatement> TK_NEWLINE 455
<iteration> 455
TK_FOR <loop> TK_COLON <block> 455
<identifier> <loop1> 455
<TK_IDEN,u,455> 455
TK_IN <iterable> 455
<identifier> <iterable1> 455
<TK_IDEN,T,455> 455
TK_ADJACENT TK_TO <assignable> 455
<identifier> <assignable1> 455
<TK_IDEN,T,455> 455
TK_MEMBEROP <endassignable> 455
TK_ROOT <primitiveval> 455
e 455
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 456
<possiblestmts> <statements> 457
<validstatement> TK_NEWLINE 457
<letstmt> 457
TK_LET <assignable> TK_BE <equatable> 457
<identifier> <assignable1> 457
<TK_IDEN,e1,457> 457
e 457
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 457
<identifier> <assignable1> 457
<TK_IDEN,u,457> 457
e 457
<identifier> <assignable1> 457
<TK_IDEN,T,457> 457
TK_MEMBEROP <endassignable> 457
TK_ROOT <primitiveval> 457
e 457
<possiblestmts> <statements> 459
<validconditional> 459
<ifblock> TK_NEWLINE <elseifblock> 459
<ifstmt> TK_COLON <block> 459
TK_IF <boolexp> 459
<expor> <boolexp1> 459
<expand> <expor1> 459
<expnot> 459
<boolresult> 459
<exp> <relop> <exp> 459
<mulexp> <exp1> 459
<modexp> <mulexp1> 459
<baseexp> <modexp1> 459
<assignorfunc> 459
<identifier> <assignorfunc1> 459
<TK_IDEN,v,459> 459
e 459
e 459
e 459
e 459
TK_EQ 459
<mulexp> <exp1> 459
<modexp> <mulexp1> 459
<baseexp> <modexp1> 459
<assignorfunc> 459
<identifier> <assignorfunc1> 459
<TK_IDEN,e1,459> 459
<assignable1> 459
TK_MEMBEROP <endassignable> 459
TK_WEIGHT 459
e 459
e 459
e 459
e 459
e 459
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 460
<possiblestmts> <statements> 461
<validstatement> TK_NEWLINE 461
<letstmt> 461
TK_LET <assignable> TK_BE <equatable> 461
<identifier> <assignable1> 461
<TK_IDEN,z,461> 461
TK_MEMBEROP <endassignable> 461
<primitivetype> 461
TK_INT 461
<exp> 461
<mulexp> <exp1> 461
<modexp> <mulexp1> 461
<baseexp> <modexp1> 461
<assignorfunc> 461
<identifier> <assignorfunc1> 461
<TK_IDEN,v,461> 461
e 462
e 462
e 462
e 462
<possiblestmts> <statements> 462
<validstatement> TK_NEWLINE 462
<breakstmt> 462
TK_BREAK 462
e 463
e 465
e 465
<possiblestmts> <statements> 467
<validstatement> TK_NEWLINE 467
<iteration> 467
TK_FOR <loop> TK_COLON <block> 467
<identifier> <loop1> 467
<TK_IDEN,u,467> 467
TK_IN <iterable> 467
<identifier> <iterable1> 467
<TK_IDEN,T,467> 467
TK_ADJACENT TK_TO <assignable> 467
<identifier> <assignable1> 467
<TK_IDEN,T,467> 467
TK_MEMBEROP <endassignable> 467
TK_ROOT <primitiveval> 467
e 467
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 468
<possiblestmts> <statements> 469
<validstatement> TK_NEWLINE 469
<letstmt> 469
TK_LET <assignable> TK_BE <equatable> 469
<identifier> <assignable1> 469
<TK_IDEN,e1,469> 469
e 469
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 469
<identifier> <assignable1> 469
<TK_IDEN,u,469> 469
e 469
<identifier> <assignable1> 469
<TK_IDEN,T,469> 469
TK_MEMBEROP <endassignable> 469
TK_ROOT <primitiveval> 469
e 469
<possiblestmts> <statements> 471
<validconditional> 471
<ifblock> TK_NEWLINE <elseifblock> 471
<ifstmt> TK_COLON <block> 471
TK_IF <boolexp> 471
<expor> <boolexp1> 471
<expand> <expor1> 471
TK_NOT <expand> 471
<expnot> 471
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 471
<expor> <boolexp1> 471
<expand> <expor1> 471
<expnot> 471
<boolresult> 471
<exp> <relop> <exp> 471
<mulexp> <exp1> 471
<modexp> <mulexp1> 471
<baseexp> <modexp1> 471
<assignorfunc> 471
<identifier> <assignorfunc1> 471
<TK_IDEN,v,471> 471
e 471
e 471
e 471
e 471
TK_EQ 471
<mulexp> <exp1> 471
<modexp> <mulexp1> 471
<baseexp> <modexp1> 471
<assignorfunc> 471
<identifier> <assignorfunc1> 471
<TK_IDEN,e1,471> 471
<assignable1> 471
TK_MEMBEROP <endassignable> 471
TK_WEIGHT 471
e 471
e 471
e 471
e 471
e 471
e 471
e 471
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 472
<possiblestmts> <statements> 473
<validstatement> TK_NEWLINE 473
<letstmt> 473
TK_LET <assignable> TK_BE <equatable> 473
<identifier> <assignable1> 473
<TK_IDEN,answer,473> 473
e 473
<exp> 473
<mulexp> <exp1> 473
<modexp> <mulexp1> 473
<baseexp> <modexp1> 473
<assignorfunc> 473
<identifier> <assignorfunc1> 473
<TK_IDEN,e1,473> 473
<assignable1> 473
TK_MEMBEROP <endassignable> 473
TK_WEIGHT 473
e 474
e 474
e 474
e 474
e 476
e 476
e 478
TK_RETURN <returnable> 478
TK_NOTHING 478
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 482
<TK_IDEN,edgeWeight15,482> 482
e 482
TK_NOTHING 482
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 483
<possiblestmts> <statements> 485
<validstatement> TK_NEWLINE 485
<definestmt> 485
TK_DEFINE <defineargs> 485
<datatype> <identifier> <moreidens> 485
<primitivetype> 485
TK_INT 485
<TK_IDEN,answer,485> 485
e 486
<possiblestmts> <statements> 486
<validstatement> TK_NEWLINE 486
<definestmt> 486
TK_DEFINE <defineargs> 486
<datatype> <identifier> <moreidens> 486
<complextype> 486
TK_VERTEX 486
<TK_IDEN,z,486> 486
e 487
<possiblestmts> <statements> 487
<validstatement> TK_NEWLINE 487
<letstmt> 487
TK_LET <assignable> TK_BE <equatable> 487
<identifier> <assignable1> 487
<TK_IDEN,v,487> 487
e 487
<exp> 487
<mulexp> <exp1> 487
<modexp> <mulexp1> 487
<baseexp> <modexp1> 487
<literal> 487
<TK_INTLIT,5,487> 487
e 488
e 488
e 488
<possiblestmts> <statements> 489
<validstatement> TK_NEWLINE 489
<iteration> 489
TK_FOR <loop> TK_COLON <block> 489
<identifier> <loop1> 489
<TK_IDEN,u,489> 489
TK_IN <iterable> 489
<identifier> <iterable1> 489
<TK_IDEN,T,489> 489
TK_ADJACENT TK_TO <assignable> 489
<identifier> <assignable1> 489
<TK_IDEN,T,489> 489
TK_MEMBEROP <endassignable> 489
TK_ROOT <primitiveval> 489
e 489
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 490
<possiblestmts> <statements> 491
<validstatement> TK_NEWLINE 491
<letstmt> 491
TK_LET <assignable> TK_BE <equatable> 491
<identifier> <assignable1> 491
<TK_IDEN,e1,491> 491
e 491
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 491
<identifier> <assignable1> 491
<TK_IDEN,u,491> 491
e 491
<identifier> <assignable1> 491
<TK_IDEN,T,491> 491
TK_MEMBEROP <endassignable> 491
TK_ROOT <primitiveval> 491
e 491
<possiblestmts> <statements> 493
<validconditional> 493
<ifblock> TK_NEWLINE <elseifblock> 493
<ifstmt> TK_COLON <block> 493
TK_IF <boolexp> 493
<expor> <boolexp1> 493
<expand> <expor1> 493
<expnot> 493
<boolresult> 493
<exp> <relop> <exp> 493
<mulexp> <exp1> 493
<modexp> <mulexp1> 493
<baseexp> <modexp1> 493
<assignorfunc> 493
<identifier> <assignorfunc1> 493
<TK_IDEN,v,493> 493
e 493
e 493
e 493
e 493
TK_EQ 493
<mulexp> <exp1> 493
<modexp> <mulexp1> 493
<baseexp> <modexp1> 493
<assignorfunc> 493
<identifier> <assignorfunc1> 493
<TK_IDEN,e1,493> 493
<assignable1> 493
TK_MEMBEROP <endassignable> 493
TK_WEIGHT 493
e 493
e 493
e 493
e 493
e 493
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 494
<possiblestmts> <statements> 495
<validstatement> TK_NEWLINE 495
<letstmt> 495
TK_LET <assignable> TK_BE <equatable> 495
<identifier> <assignable1> 495
<TK_IDEN,z,495> 495
TK_MEMBEROP <endassignable> 495
<primitivetype> 495
TK_INT 495
<exp> 495
<mulexp> <exp1> 495
<modexp> <mulexp1> 495
<baseexp> <modexp1> 495
<assignorfunc> 495
<identifier> <assignorfunc1> 495
<TK_IDEN,v,495> 495
e 496
e 496
e 496
e 496
<possiblestmts> <statements> 496
<validstatement> TK_NEWLINE 496
<breakstmt> 496
TK_BREAK 496
e 497
e 499
e 499
<possiblestmts> <statements> 501
<validstatement> TK_NEWLINE 501
<iteration> 501
TK_FOR <loop> TK_COLON <block> 501
<identifier> <loop1> 501
<TK_IDEN,u,501> 501
TK_IN <iterable> 501
<identifier> <iterable1> 501
<TK_IDEN,T,501> 501
TK_ADJACENT TK_TO <assignable> 501
<identifier> <assignable1> 501
<TK_IDEN,T,501> 501
TK_MEMBEROP <endassignable> 501
TK_ROOT <primitiveval> 501
e 501
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 502
<possiblestmts> <statements> 503
<validstatement> TK_NEWLINE 503
<letstmt> 503
TK_LET <assignable> TK_BE <equatable> 503
<identifier> <assignable1> 503
<TK_IDEN,e1,503> 503
e 503
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 503
<identifier> <assignable1> 503
<TK_IDEN,u,503> 503
e 503
<identifier> <assignable1> 503
<TK_IDEN,T,503> 503
TK_MEMBEROP <endassignable> 503
TK_ROOT <primitiveval> 503
e 503
<possiblestmts> <statements> 505
<validconditional> 505
<ifblock> TK_NEWLINE <elseifblock> 505
<ifstmt> TK_COLON <block> 505
TK_IF <boolexp> 505
<expor> <boolexp1> 505
<expand> <expor1> 505
TK_NOT <expand> 505
<expnot> 505
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 505
<expor> <boolexp1> 505
<expand> <expor1> 505
<expnot> 505
<boolresult> 505
<exp> <relop> <exp> 505
<mulexp> <exp1> 505
<modexp> <mulexp1> 505
<baseexp> <modexp1> 505
<assignorfunc> 505
<identifier> <assignorfunc1> 505
<TK_IDEN,v,505> 505
e 505
e 505
e 505
e 505
TK_EQ 505
<mulexp> <exp1> 505
<modexp> <mulexp1> 505
<baseexp> <modexp1> 505
<assignorfunc> 505
<identifier> <assignorfunc1> 505
<TK_IDEN,e1,505> 505
<assignable1> 505
TK_MEMBEROP <endassignable> 505
TK_WEIGHT 505
e 505
e 505
e 505
e 505
e 505
e 505
e 505
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 506
<possiblestmts> <statements> 507
<validstatement> TK_NEWLINE 507
<letstmt> 507
TK_LET <assignable> TK_BE <equatable> 507
<identifier> <assignable1> 507
<TK_IDEN,answer,507> 507
e 507
<exp> 507
<mulexp> <exp1> 507
<modexp> <mulexp1> 507
<baseexp> <modexp1> 507
<assignorfunc> 507
<identifier> <assignorfunc1> 507
<TK_IDEN,e1,507> 507
<assignable1> 507
TK_MEMBEROP <endassignable> 507
TK_WEIGHT 507
e 508
e 508
e 508
e 508
e 510
e 510
e 512
TK_RETURN <returnable> 512
TK_NOTHING 512
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 516
<TK_IDEN,edgeWeight16,516> 516
e 516
TK_NOTHING 516
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 517
<possiblestmts> <statements> 519
<validstatement> TK_NEWLINE 519
<definestmt> 519
TK_DEFINE <defineargs> 519
<datatype> <identifier> <moreidens> 519
<primitivetype> 519
TK_INT 519
<TK_IDEN,answer,519> 519
e 520
<possiblestmts> <statements> 520
<validstatement> TK_NEWLINE 520
<definestmt> 520
TK_DEFINE <defineargs> 520
<datatype> <identifier> <moreidens> 520
<complextype> 520
TK_VERTEX 520
<TK_IDEN,z,520> 520
e 521
<possiblestmts> <statements> 521
<validstatement> TK_NEWLINE 521
<letstmt> 521
TK_LET <assignable> TK_BE <equatable> 521
<identifier> <assignable1> 521
<TK_IDEN,v,521> 521
e 521
<exp> 521
<mulexp> <exp1> 521
<modexp> <mulexp1> 521
<baseexp> <modexp1> 521
<literal> 521
<TK_INTLIT,5,521> 521
e 522
e 522
e 522
<possiblestmts> <statements> 523
<validstatement> TK_NEWLINE 523
<iteration> 523
TK_FOR <loop> TK_COLON <block> 523
<identifier> <loop1> 523
<TK_IDEN,u,523> 523
TK_IN <iterable> 523
<identifier> <iterable1> 523
<TK_IDEN,T,523> 523
TK_ADJACENT TK_TO <assignable> 523
<identifier> <assignable1> 523
<TK_IDEN,T,523> 523
TK_MEMBEROP <endassignable> 523
TK_ROOT <primitiveval> 523
e 523
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 524
<possiblestmts> <statements> 525
<validstatement> TK_NEWLINE 525
<letstmt> 525
TK_LET <assignable> TK_BE <equatable> 525
<identifier> <assignable1> 525
<TK_IDEN,e1,525> 525
e 525
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 525
<identifier> <assignable1> 525
<TK_IDEN,u,525> 525
e 525
<identifier> <assignable1> 525
<TK_IDEN,T,525> 525
TK_MEMBEROP <endassignable> 525
TK_ROOT <primitiveval> 525
e 525
<possiblestmts> <statements> 527
<validconditional> 527
<ifblock> TK_NEWLINE <elseifblock> 527
<ifstmt> TK_COLON <block> 527
TK_IF <boolexp> 527
<expor> <boolexp1> 527
<expand> <expor1> 527
<expnot> 527
<boolresult> 527
<exp> <relop> <exp> 527
<mulexp> <exp1> 527
<modexp> <mulexp1> 527
<baseexp> <modexp1> 527
<assignorfunc> 527
<identifier> <assignorfunc1> 527
<TK_IDEN,v,527> 527
e 527
e 527
e 527
e 527
TK_EQ 527
<mulexp> <exp1> 527
<modexp> <mulexp1> 527
<baseexp> <modexp1> 527
<assignorfunc> 527
<identifier> <assignorfunc1> 527
<TK_IDEN,e1,527> 527
<assignable1> 527
TK_MEMBEROP <endassignable> 527
TK_WEIGHT 527
e 527
e 527
e 527
e 527
e 527
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 528
<possiblestmts> <statements> 529
<validstatement> TK_NEWLINE 529
<letstmt> 529
TK_LET <assignable> TK_BE <equatable> 529
<identifier> <assignable1> 529
<TK_IDEN,z,529> 529
TK_MEMBEROP <endassignable> 529
<primitivetype> 529
TK_INT 529
<exp> 529
<mulexp> <exp1> 529
<modexp> <mulexp1> 529
<baseexp> <modexp1> 529
<assignorfunc> 529
<identifier> <assignorfunc1> 529
<TK_IDEN,v,529> 529
e 530
e 530
e 530
e 530
<possiblestmts> <statements> 530
<validstatement> TK_NEWLINE 530
<breakstmt> 530
TK_BREAK 530
e 531
e 533
e 533
<possiblestmts> <statements> 535
<validstatement> TK_NEWLINE 535
<iteration> 535
TK_FOR <loop> TK_COLON <block> 535
<identifier> <loop1> 535
<TK_IDEN,u,535> 535
TK_IN <iterable> 535
<identifier> <iterable1> 535
<TK_IDEN,T,535> 535
TK_ADJACENT TK_TO <assignable> 535
<identifier> <assignable1> 535
<TK_IDEN,T,535> 535
TK_MEMBEROP <endassignable> 535
TK_ROOT <primitiveval> 535
e 535
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 536
<possiblestmts> <statements> 537
<validstatement> TK_NEWLINE 537
<letstmt> 537
TK_LET <assignable> TK_BE <equatable> 537
<identifier> <assignable1> 537
<TK_IDEN,e1,537> 537
e 537
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 537
<identifier> <assignable1> 537
<TK_IDEN,u,537> 537
e 537
<identifier> <assignable1> 537
<TK_IDEN,T,537> 537
TK_MEMBEROP <endassignable> 537
TK_ROOT <primitiveval> 537
e 537
<possiblestmts> <statements> 539
<validconditional> 539
<ifblock> TK_NEWLINE <elseifblock> 539
<ifstmt> TK_COLON <block> 539
TK_IF <boolexp> 539
<expor> <boolexp1> 539
<expand> <expor1> 539
TK_NOT <expand> 539
<expnot> 539
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 539
<expor> <boolexp1> 539
<expand> <expor1> 539
<expnot> 539
<boolresult> 539
<exp> <relop> <exp> 539
<mulexp> <exp1> 539
<modexp> <mulexp1> 539
<baseexp> <modexp1> 539
<assignorfunc> 539
<identifier> <assignorfunc1> 539
<TK_IDEN,v,539> 539
e 539
e 539
e 539
e 539
TK_EQ 539
<mulexp> <exp1> 539
<modexp> <mulexp1> 539
<baseexp> <modexp1> 539
<assignorfunc> 539
<identifier> <assignorfunc1> 539
<TK_IDEN,e1,539> 539
<assignable1> 539
TK_MEMBEROP <endassignable> 539
TK_WEIGHT 539
e 539
e 539
e 539
e 539
e 539
e 539
e 539
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 540
<possiblestmts> <statements> 541
<validstatement> TK_NEWLINE 541
<letstmt> 541
TK_LET <assignable> TK_BE <equatable> 541
<identifier> <assignable1> 541
<TK_IDEN,answer,541> 541
e 541
<exp> 541
<mulexp> <exp1> 541
<modexp> <mulexp1> 541
<baseexp> <modexp1> 541
<assignorfunc> 541
<identifier> <assignorfunc1> 541
<TK_IDEN,e1,541> 541
<assignable1> 541
TK_MEMBEROP <endassignable> 541
TK_WEIGHT 541
e 542
e 542
e 542
e 542
e 544
e 544
e 546
TK_RETURN <returnable> 546
TK_NOTHING 546
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 550
<TK_IDEN,edgeWeight17,550> 550
e 550
TK_NOTHING 550
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 551
<possiblestmts> <statements> 553
<validstatement> TK_NEWLINE 553
<definestmt> 553
TK_DEFINE <defineargs> 553
<datatype> <identifier> <moreidens> 553
<primitivetype> 553
TK_INT 553
<TK_IDEN,answer,553> 553
e 554
<possiblestmts> <statements> 554
<validstatement> TK_NEWLINE 554
<definestmt> 554
TK_DEFINE <defineargs> 554
<datatype> <identifier> <moreidens> 554
<complextype> 554
TK_VERTEX 554
<TK_IDEN,z,554> 554
e 555
<possiblestmts> <statements> 555
<validstatement> TK_NEWLINE 555
<letstmt> 555
TK_LET <assignable> TK_BE <equatable> 555
<identifier> <assignable1> 555
<TK_IDEN,v,555> 555
e 555
<exp> 555
<mulexp> <exp1> 555
<modexp> <mulexp1> 555
<baseexp> <modexp1> 555
<literal> 555
<TK_INTLIT,5,555> 555
e 556
e 556
e 556
<possiblestmts> <statements> 557
<validstatement> TK_NEWLINE 557
<iteration> 557
TK_FOR <loop> TK_COLON <block> 557
<identifier> <loop1> 557
<TK_IDEN,u,557> 557
TK_IN <iterable> 557
<identifier> <iterable1> 557
<TK_IDEN,T,557> 557
TK_ADJACENT TK_TO <assignable> 557
<identifier> <assignable1> 557
<TK_IDEN,T,557> 557
TK_MEMBEROP <endassignable> 557
TK_ROOT <primitiveval> 557
e 557
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 558
<possiblestmts> <statements> 559
<validstatement> TK_NEWLINE 559
<letstmt> 559
TK_LET <assignable> TK_BE <equatable> 559
<identifier> <assignable1> 559
<TK_IDEN,e1,559> 559
e 559
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 559
<identifier> <assignable1> 559
<TK_IDEN,u,559> 559
e 559
<identifier> <assignable1> 559
<TK_IDEN,T,559> 559
TK_MEMBEROP <endassignable> 559
TK_ROOT <primitiveval> 559
e 559
<possiblestmts> <statements> 561
<validconditional> 561
<ifblock> TK_NEWLINE <elseifblock> 561
<ifstmt> TK_COLON <block> 561
TK_IF <boolexp> 561
<expor> <boolexp1> 561
<expand> <expor1> 561
<expnot> 561
<boolresult> 561
<exp> <relop> <exp> 561
<mulexp> <exp1> 561
<modexp> <mulexp1> 561
<baseexp> <modexp1> 561
<assignorfunc> 561
<identifier> <assignorfunc1> 561
<TK_IDEN,v,561> 561
e 561
e 561
e 561
e 561
TK_EQ 561
<mulexp> <exp1> 561
<modexp> <mulexp1> 561
<baseexp> <modexp1> 561
<assignorfunc> 561
<identifier> <assignorfunc1> 561
<TK_IDEN,e1,561> 561
<assignable1> 561
TK_MEMBEROP <endassignable> 561
TK_WEIGHT 561
e 561
e 561
e 561
e 561
e 561
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 562
<possiblestmts> <statements> 563
<validstatement> TK_NEWLINE 563
<letstmt> 563
TK_LET <assignable> TK_BE <equatable> 563
<identifier> <assignable1> 563
<TK_IDEN,z,563> 563
TK_MEMBEROP <endassignable> 563
<primitivetype> 563
TK_INT 563
<exp> 563
<mulexp> <exp1> 563
<modexp> <mulexp1> 563
<baseexp> <modexp1> 563
<assignorfunc> 563
<identifier> <assignorfunc1> 563
<TK_IDEN,v,563> 563
e 564
e 564
e 564
e 564
<possiblestmts> <statements> 564
<validstatement> TK_NEWLINE 564
<breakstmt> 564
TK_BREAK 564
e 565
e 567
e 567
<possiblestmts> <statements> 569
<validstatement> TK_NEWLINE 569
<iteration> 569
TK_FOR <loop> TK_COLON <block> 569
<identifier> <loop1> 569
<TK_IDEN,u,569> 569
TK_IN <iterable> 569
<identifier> <iterable1> 569
<TK_IDEN,T,569> 569
TK_ADJACENT TK_TO <assignable> 569
<identifier> <assignable1> 569
<TK_IDEN,T,569> 569
TK_MEMBEROP <endassignable> 569
TK_ROOT <primitiveval> 569
e 569
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 570
<possiblestmts> <statements> 571
<validstatement> TK_NEWLINE 571
<letstmt> 571
TK_LET <assignable> TK_BE <equatable> 571
<identifier> <assignable1> 571
<TK_IDEN,e1,571> 571
e 571
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 571
<identifier> <assignable1> 571
<TK_IDEN,u,571> 571
e 571
<identifier> <assignable1> 571
<TK_IDEN,T,571> 571
TK_MEMBEROP <endassignable> 571
TK_ROOT <primitiveval> 571
e 571
<possiblestmts> <statements> 573
<validconditional> 573
<ifblock> TK_NEWLINE <elseifblock> 573
<ifstmt> TK_COLON <block> 573
TK_IF <boolexp> 573
<expor> <boolexp1> 573
<expand> <expor1> 573
TK_NOT <expand> 573
<expnot> 573
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 573
<expor> <boolexp1> 573
<expand> <expor1> 573
<expnot> 573
<boolresult> 573
<exp> <relop> <exp> 573
<mulexp> <exp1> 573
<modexp> <mulexp1> 573
<baseexp> <modexp1> 573
<assignorfunc> 573
<identifier> <assignorfunc1> 573
<TK_IDEN,v,573> 573
e 573
e 573
e 573
e 573
TK_EQ 573
<mulexp> <exp1> 573
<modexp> <mulexp1> 573
<baseexp> <modexp1> 573
<assignorfunc> 573
<identifier> <assignorfunc1> 573
<TK_IDEN,e1,573> 573
<assignable1> 573
TK_MEMBEROP <endassignable> 573
TK_WEIGHT 573
e 573
e 573
e 573
e 573
e 573
e 573
e 573
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 574
<possiblestmts> <statements> 575
<validstatement> TK_NEWLINE 575
<letstmt> 575
TK_LET <assignable> TK_BE <equatable> 575
<identifier> <assignable1> 575
<TK_IDEN,answer,575> 575
e 575
<exp> 575
<mulexp> <exp1> 575
<modexp> <mulexp1> 575
<baseexp> <modexp1> 575
<assignorfunc> 575
<identifier> <assignorfunc1> 575
<TK_IDEN,e1,575> 575
<assignable1> 575
TK_MEMBEROP <endassignable> 575
TK_WEIGHT 575
e 576
e 576
e 576
e 576
e 578
e 578
e 580
TK_RETURN <returnable> 580
TK_NOTHING 580
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 584
<TK_IDEN,edgeWeight18,584> 584
e 584
TK_NOTHING 584
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 585
<possiblestmts> <statements> 587
<validstatement> TK_NEWLINE 587
<definestmt> 587
TK_DEFINE <defineargs> 587
<datatype> <identifier> <moreidens> 587
<primitivetype> 587
TK_INT 587
<TK_IDEN,answer,587> 587
e 588
<possiblestmts> <statements> 588
<validstatement> TK_NEWLINE 588
<definestmt> 588
TK_DEFINE <defineargs> 588
<datatype> <identifier> <moreidens> 588
<complextype> 588
TK_VERTEX 588
<TK_IDEN,z,588> 588
e 589
<possiblestmts> <statements> 589
<validstatement> TK_NEWLINE 589
<letstmt> 589
TK_LET <assignable> TK_BE <equatable> 589
<identifier> <assignable1> 589
<TK_IDEN,v,589> 589
e 589
<exp> 589
<mulexp> <exp1> 589
<modexp> <mulexp1> 589
<baseexp> <modexp1> 589
<literal> 589
<TK_INTLIT,5,589> 589
e 590
e 590
e 590
<possiblestmts> <statements> 591
<validstatement> TK_NEWLINE 591
<iteration> 591
TK_FOR <loop> TK_COLON <block> 591
<identifier> <loop1> 591
<TK_IDEN,u,591> 591
TK_IN <iterable> 591
<identifier> <iterable1> 591
<TK_IDEN,T,591> 591
TK_ADJACENT TK_TO <assignable> 591
<identifier> <assignable1> 591
<TK_IDEN,T,591> 591
TK_MEMBEROP <endassignable> 591
TK_ROOT <primitiveval> 591
e 591
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 592
<possiblestmts> <statements> 593
<validstatement> TK_NEWLINE 593
<letstmt> 593
TK_LET <assignable> TK_BE <equatable> 593
<identifier> <assignable1> 593
<TK_IDEN,e1,593> 593
e 593
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 593
<identifier> <assignable1> 593
<TK_IDEN,u,593> 593
e 593
<identifier> <assignable1> 593
<TK_IDEN,T,593> 593
TK_MEMBEROP <endassignable> 593
TK_ROOT <primitiveval> 593
e 593
<possiblestmts> <statements> 595
<validconditional> 595
<ifblock> TK_NEWLINE <elseifblock> 595
<ifstmt> TK_COLON <block> 595
TK_IF <boolexp> 595
<expor> <boolexp1> 595
<expand> <expor1> 595
<expnot> 595
<boolresult> 595
<exp> <relop> <exp> 595
<mulexp> <exp1> 595
<modexp> <mulexp1> 595
<baseexp> <modexp1> 595
<assignorfunc> 595
<identifier> <assignorfunc1> 595
<TK_IDEN,v,595> 595
e 595
e 595
e 595
e 595
TK_EQ 595
<mulexp> <exp1> 595
<modexp> <mulexp1> 595
<baseexp> <modexp1> 595
<assignorfunc> 595
<identifier> <assignorfunc1> 595
<TK_IDEN,e1,595> 595
<assignable1> 595
TK_MEMBEROP <endassignable> 595
TK_WEIGHT 595
e 595
e 595
e 595
e 595
e 595
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 596
<possiblestmts> <statements> 597
<validstatement> TK_NEWLINE 597
<letstmt> 597
TK_LET <assignable> TK_BE <equatable> 597
<identifier> <assignable1> 597
<TK_IDEN,z,597> 597
TK_MEMBEROP <endassignable> 597
<primitivetype> 597
TK_INT 597
<exp> 597
<mulexp> <exp1> 597
<modexp> <mulexp1> 597
<baseexp> <modexp1> 597
<assignorfunc> 597
<identifier> <assignorfunc1> 597
<TK_IDEN,v,597> 597
e 598
e 598
e 598
e 598
<possiblestmts> <statements> 598
<validstatement> TK_NEWLINE 598
<breakstmt> 598
TK_BREAK 598
e 599
e 601
e 601
<possiblestmts> <statements> 603
<validstatement> TK_NEWLINE 603
<iteration> 603
TK_FOR <loop> TK_COLON <block> 603
<identifier> <loop1> 603
<TK_IDEN,u,603> 603
TK_IN <iterable> 603
<identifier> <iterable1> 603
<TK_IDEN,T,603> 603
TK_ADJACENT TK_TO <assignable> 603
<identifier> <assignable1> 603
<TK_IDEN,T,603> 603
TK_MEMBEROP <endassignable> 603
TK_ROOT <primitiveval> 603
e 603
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 604
<possiblestmts> <statements> 605
<validstatement> TK_NEWLINE 605
<letstmt> 605
TK_LET <assignable> TK_BE <equatable> 605
<identifier> <assignable1> 605
<TK_IDEN,e1,605> 605
e 605
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 605
<identifier> <assignable1> 605
<TK_IDEN,u,605> 605
e 605
<identifier> <assignable1> 605
<TK_IDEN,T,605> 605
TK_MEMBEROP <endassignable> 605
TK_ROOT <primitiveval> 605
e 605
<possiblestmts> <statements> 607
<validconditional> 607
<ifblock> TK_NEWLINE <elseifblock> 607
<ifstmt> TK_COLON <block> 607
TK_IF <boolexp> 607
<expor> <boolexp1> 607
<expand> <expor1> 607
TK_NOT <expand> 607
<expnot> 607
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 607
<expor> <boolexp1> 607
<expand> <expor1> 607
<expnot> 607
<boolresult> 607
<exp> <relop> <exp> 607
<mulexp> <exp1> 607
<modexp> <mulexp1> 607
<baseexp> <modexp1> 607
<assignorfunc> 607
<identifier> <assignorfunc1> 607
<TK_IDEN,v,607> 607
e 607
e 607
e 607
e 607
TK_EQ 607
<mulexp> <exp1> 607
<modexp> <mulexp1> 607
<baseexp> <modexp1> 607
<assignorfunc> 607
<identifier> <assignorfunc1> 607
<TK_IDEN,e1,607> 607
<assignable1> 607
TK_MEMBEROP <endassignable> 607
TK_WEIGHT 607
e 607
e 607
e 607
e 607
e 607
e 607
e 607
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 608
<possiblestmts> <statements> 609
<validstatement> TK_NEWLINE 609
<letstmt> 609
TK_LET <assignable> TK_BE <equatable> 609
<identifier> <assignable1> 609
<TK_IDEN,answer,609> 609
e 609
<exp> 609
<mulexp> <exp1> 609
<modexp> <mulexp1> 609
<baseexp> <modexp1> 609
<assignorfunc> 609
<identifier> <assignorfunc1> 609
<TK_IDEN,e1,609> 609
<assignable1> 609
TK_MEMBEROP <endassignable> 609
TK_WEIGHT 609
e 610
e 610
e 610
e 610
e 612
e 612
e 614
TK_RETURN <returnable> 614
TK_NOTHING 614
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 618
<TK_IDEN,edgeWeight19,618> 618
e 618
TK_NOTHING 618
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 619
<possiblestmts> <statements> 621
<validstatement> TK_NEWLINE 621
<definestmt> 621
TK_DEFINE <defineargs> 621
<datatype> <identifier> <moreidens> 621
<primitivetype> 621
TK_INT 621
<TK_IDEN,answer,621> 621
e 622
<possiblestmts> <statements> 622
<validstatement> TK_NEWLINE 622
<definestmt> 622
TK_DEFINE <defineargs> 622
<datatype> <identifier> <moreidens> 622
<complextype> 622
TK_VERTEX 622
<TK_IDEN,z,622> 622
e 623
<possiblestmts> <statements> 623
<validstatement> TK_NEWLINE 623
<letstmt> 623
TK_LET <assignable> TK_BE <equatable> 623
<identifier> <assignable1> 623
<TK_IDEN,v,623> 623
e 623
<exp> 623
<mulexp> <exp1> 623
<modexp> <mulexp1> 623
<baseexp> <modexp1> 623
<literal> 623
<TK_INTLIT,5,623> 623
e 624
e 624
e 624
<possiblestmts> <statements> 625
<validstatement> TK_NEWLINE 625
<iteration> 625
TK_FOR <loop> TK_COLON <block> 625
<identifier> <loop1> 625
<TK_IDEN,u,625> 625
TK_IN <iterable> 625
<identifier> <iterable1> 625
<TK_IDEN,T,625> 625
TK_ADJACENT TK_TO <assignable> 625
<identifier> <assignable1> 625
<TK_IDEN,T,625> 625
TK_MEMBEROP <endassignable> 625
TK_ROOT <primitiveval> 625
e 625
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 626
<possiblestmts> <statements> 627
<validstatement> TK_NEWLINE 627
<letstmt> 627
TK_LET <assignable> TK_BE <equatable> 627
<identifier> <assignable1> 627
<TK_IDEN,e1,627> 627
e 627
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 627
<identifier> <assignable1> 627
<TK_IDEN,u,627> 627
e 627
<identifier> <assignable1> 627
<TK_IDEN,T,627> 627
TK_MEMBEROP <endassignable> 627
TK_ROOT <primitiveval> 627
e 627
<possiblestmts> <statements> 629
<validconditional> 629
<ifblock> TK_NEWLINE <elseifblock> 629
<ifstmt> TK_COLON <block> 629
TK_IF <boolexp> 629
<expor> <boolexp1> 629
<expand> <expor1> 629
<expnot> 629
<boolresult> 629
<exp> <relop> <exp> 629
<mulexp> <exp1> 629
<modexp> <mulexp1> 629
<baseexp> <modexp1> 629
<assignorfunc> 629
<identifier> <assignorfunc1> 629
<TK_IDEN,v,629> 629
e 629
e 629
e 629
e 629
TK_EQ 629
<mulexp> <exp1> 629
<modexp> <mulexp1> 629
<baseexp> <modexp1> 629
<assignorfunc> 629
<identifier> <assignorfunc1> 629
<TK_IDEN,e1,629> 629
<assignable1> 629
TK_MEMBEROP <endassignable> 629
TK_WEIGHT 629
e 629
e 629
e 629
e 629
e 629
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 630
<possiblestmts> <statements> 631
<validstatement> TK_NEWLINE 631
<letstmt> 631
TK_LET <assignable> TK_BE <equatable> 631
<identifier> <assignable1> 631
<TK_IDEN,z,631> 631
TK_MEMBEROP <endassignable> 631
<primitivetype> 631
TK_INT 631
<exp> 631
<mulexp> <exp1> 631
<modexp> <mulexp1> 631
<baseexp> <modexp1> 631
<assignorfunc> 631
<identifier> <assignorfunc1> 631
<TK_IDEN,v,631> 631
e 632
e 632
e 632
e 632
<possiblestmts> <statements> 632
<validstatement> TK_NEWLINE 632
<breakstmt> 632
TK_BREAK 632
e 633
e 635
e 635
<possiblestmts> <statements> 637
<validstatement> TK_NEWLINE 637
<iteration> 637
TK_FOR <loop> TK_COLON <block> 637
<identifier> <loop1> 637
<TK_IDEN,u,637> 637
TK_IN <iterable> 637
<identifier> <iterable1> 637
<TK_IDEN,T,637> 637
TK_ADJACENT TK_TO <assignable> 637
<identifier> <assignable1> 637
<TK_IDEN,T,637> 637
TK_MEMBEROP <endassignable> 637
TK_ROOT <primitiveval> 637
e 637
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 638
<possiblestmts> <statements> 639
<validstatement> TK_NEWLINE 639
<letstmt> 639
TK_LET <assignable> TK_BE <equatable> 639
<identifier> <assignable1> 639
<TK_IDEN,e1,639> 639
e 639
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 639
<identifier> <assignable1> 639
<TK_IDEN,u,639> 639
e 639
<identifier> <assignable1> 639
<TK_IDEN,T,639> 639
TK_MEMBEROP <endassignable> 639
TK_ROOT <primitiveval> 639
e 639
<possiblestmts> <statements> 641
<validconditional> 641
<ifblock> TK_NEWLINE <elseifblock> 641
<ifstmt> TK_COLON <block> 641
TK_IF <boolexp> 641
<expor> <boolexp1> 641
<expand> <expor1> 641
TK_NOT <expand> 641
<expnot> 641
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 641
<expor> <boolexp1> 641
<expand> <expor1> 641
<expnot> 641
<boolresult> 641
<exp> <relop> <exp> 641
<mulexp> <exp1> 641
<modexp> <mulexp1> 641
<baseexp> <modexp1> 641
<assignorfunc> 641
<identifier> <assignorfunc1> 641
<TK_IDEN,v,641> 641
e 641
e 641
e 641
e 641
TK_EQ 641
<mulexp> <exp1> 641
<modexp> <mulexp1> 641
<baseexp> <modexp1> 641
<assignorfunc> 641
<identifier> <assignorfunc1> 641
<TK_IDEN,e1,641> 641
<assignable1> 641
TK_MEMBEROP <endassignable> 641
TK_WEIGHT 641
e 641
e 641
e 641
e 641
e 641
e 641
e 641
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 642
<possiblestmts> <statements> 643
<validstatement> TK_NEWLINE 643
<letstmt> 643
TK_LET <assignable> TK_BE <equatable> 643
<identifier> <assignable1> 643
<TK_IDEN,answer,643> 643
e 643
<exp> 643
<mulexp> <exp1> 643
<modexp> <mulexp1> 643
<baseexp> <modexp1> 643
<assignorfunc> 643
<identifier> <assignorfunc1> 643
<TK_IDEN,e1,643> 643
<assignable1> 643
TK_MEMBEROP <endassignable> 643
TK_WEIGHT 643
e 644
e 644
e 644
e 644
e 646
e 646
e 648
TK_RETURN <returnable> 648
TK_NOTHING 648
TK_FUNCTION <identifier> TK_OPENPAREN <paramlist> TK_CLOSEPAREN TK_RETURNSYM <returntype> TK_COLON TK_NEWLINE <fnbody> TK_NEWLINE <fndefines> 652
<TK_IDEN,edgeWeight20,652> 652
e 652
TK_NOTHING 652
TK_BEGIN TK_NEWLINE <statements> <returnstmt> TK_NEWLINE TK_END 653
<possiblestmts> <statements> 655
<validstatement> TK_NEWLINE 655
<definestmt> 655
TK_DEFINE <defineargs> 655
<datatype> <identifier> <moreidens> 655
<primitivetype> 655
TK_INT 655
<TK_IDEN,answer,655> 655
e 656
<possiblestmts> <statements> 656
<validstatement> TK_NEWLINE 656
<definestmt> 656
TK_DEFINE <defineargs> 656
<datatype> <identifier> <moreidens> 656
<complextype> 656
TK_VERTEX 656
<TK_IDEN,z,656> 656
e 657
<possiblestmts> <statements> 657
<validstatement> TK_NEWLINE 657
<letstmt> 657
TK_LET <assignable> TK_BE <equatable> 657
<identifier> <assignable1> 657
<TK_IDEN,v,657> 657
e 657
<exp> 657
<mulexp> <exp1> 657
<modexp> <mulexp1> 657
<baseexp> <modexp1> 657
<literal> 657
<TK_INTLIT,5,657> 657
e 658
e 658
e 658
<possiblestmts> <statements> 659
<validstatement> TK_NEWLINE 659
<iteration> 659
TK_FOR <loop> TK_COLON <block> 659
<identifier> <loop1> 659
<TK_IDEN,u,659> 659
TK_IN <iterable> 659
<identifier> <iterable1> 659
<TK_IDEN,T,659> 659
TK_ADJACENT TK_TO <assignable> 659
<identifier> <assignable1> 659
<TK_IDEN,T,659> 659
TK_MEMBEROP <endassignable> 659
TK_ROOT <primitiveval> 659
e 659
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 660
<possiblestmts> <statements> 661
<validstatement> TK_NEWLINE 661
<letstmt> 661
TK_LET <assignable> TK_BE <equatable> 661
<identifier> <assignable1> 661
<TK_IDEN,e1,661> 661
e 661
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 661
<identifier> <assignable1> 661
<TK_IDEN,u,661> 661
e 661
<identifier> <assignable1> 661
<TK_IDEN,T,661> 661
TK_MEMBEROP <endassignable> 661
TK_ROOT <primitiveval> 661
e 661
<possiblestmts> <statements> 663
<validconditional> 663
<ifblock> TK_NEWLINE <elseifblock> 663
<ifstmt> TK_COLON <block> 663
TK_IF <boolexp> 663
<expor> <boolexp1> 663
<expand> <expor1> 663
<expnot> 663
<boolresult> 663
<exp> <relop> <exp> 663
<mulexp> <exp1> 663
<modexp> <mulexp1> 663
<baseexp> <modexp1> 663
<assignorfunc> 663
<identifier> <assignorfunc1> 663
<TK_IDEN,v,663> 663
e 663
e 663
e 663
e 663
TK_EQ 663
<mulexp> <exp1> 663
<modexp> <mulexp1> 663
<baseexp> <modexp1> 663
<assignorfunc> 663
<identifier> <assignorfunc1> 663
<TK_IDEN,e1,663> 663
<assignable1> 663
TK_MEMBEROP <endassignable> 663
TK_WEIGHT 663
e 663
e 663
e 663
e 663
e 663
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 664
<possiblestmts> <statements> 665
<validstatement> TK_NEWLINE 665
<letstmt> 665
TK_LET <assignable> TK_BE <equatable> 665
<identifier> <assignable1> 665
<TK_IDEN,z,665> 665
TK_MEMBEROP <endassignable> 665
<primitivetype> 665
TK_INT 665
<exp> 665
<mulexp> <exp1> 665
<modexp> <mulexp1> 665
<baseexp> <modexp1> 665
<assignorfunc> 665
<identifier> <assignorfunc1> 665
<TK_IDEN,v,665> 665
e 666
e 666
e 666
e 666
<possiblestmts> <statements> 666
<validstatement> TK_NEWLINE 666
<breakstmt> 666
TK_BREAK 666
e 667
e 669
e 669
<possiblestmts> <statements> 671
<validstatement> TK_NEWLINE 671
<iteration> 671
TK_FOR <loop> TK_COLON <block> 671
<identifier> <loop1> 671
<TK_IDEN,u,671> 671
TK_IN <iterable> 671
<identifier> <iterable1> 671
<TK_IDEN,T,671> 671
TK_ADJACENT TK_TO <assignable> 671
<identifier> <assignable1> 671
<TK_IDEN,T,671> 671
TK_MEMBEROP <endassignable> 671
TK_ROOT <primitiveval> 671
e 671
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 672
<possiblestmts> <statements> 673
<validstatement> TK_NEWLINE 673
<letstmt> 673
TK_LET <assignable> TK_BE <equatable> 673
<identifier> <assignable1> 673
<TK_IDEN,e1,673> 673
e 673
TK_SQOPENPAREN <assignable> TK_COMMA <assignable> TK_SQCLOSEPAREN 673
<identifier> <assignable1> 673
<TK_IDEN,u,673> 673
e 673
<identifier> <assignable1> 673
<TK_IDEN,T,673> 673
TK_MEMBEROP <endassignable> 673
TK_ROOT <primitiveval> 673
e 673
<possiblestmts> <statements> 675
<validconditional> 675
<ifblock> TK_NEWLINE <elseifblock> 675
<ifstmt> TK_COLON <block> 675
TK_IF <boolexp> 675
<expor> <boolexp1> 675
<expand> <expor1> 675
TK_NOT <expand> 675
<expnot> 675
TK_CROPENPAREN <boolexp> TK_CRCLOSEPAREN 675
<expor> <boolexp1> 675
<expand> <expor1> 675
<expnot> 675
<boolresult> 675
<exp> <relop> <exp> 675
<mulexp> <exp1> 675
<modexp> <mulexp1> 675
<baseexp> <modexp1> 675
<assignorfunc> 675
<identifier> <assignorfunc1> 675
<TK_IDEN,v,675> 675
e 675
e 675
e 675
e 675
TK_EQ 675
<mulexp> <exp1> 675
<modexp> <mulexp1> 675
<baseexp> <modexp1> 675
<assignorfunc> 675
<identifier> <assignorfunc1> 675
<TK_IDEN,e1,675> 675
<assignable1> 675
TK_MEMBEROP <endassignable> 675
TK_WEIGHT 675
e 675
e 675
e 675
e 675
e 675
e 675
e 675
TK_NEWLINE TK_BEGIN TK_NEWLINE <statements> TK_END 676
<possiblestmts> <statements> 677
<validstatement> TK_NEWLINE 677
<letstmt> 677
TK_LET <assignable> TK_BE <equatable> 677
<identifier> <assignable1> 677
<TK_IDEN,answer,677> 677
e 677
<exp> 677
<mulexp> <exp1> 677
<modexp> <mulexp1> 677
<baseexp> <modexp1> 677
<assignorfunc> 677
<identifier> <assignorfunc1> 677
<TK_IDEN,e1,677> 677
<assignable1> 677
TK_MEMBEROP <endassignable> 677
TK_WEIGHT 677
e 678
e 678
e 678
e 678
e 680
e 680
e 682
TK_RETURN <returnable> 682
TK_NOTHING 682
