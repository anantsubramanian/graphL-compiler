Global Tree T
Global Vertex u
Global Edge e1
Global Int v

Function edgeWeight1() -> Nothing:
Begin
	
	Define Int answer
	Define Vertex z
	Let v be 5

	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If v = e1's weight :
  	Begin
    	Let z's Int be v
    	break
  	End

	End
	
	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If not { v = e1's weight }:
  	Begin
    	Let answer be e1's weight
  	End

	End

  return Nothing

End

Function edgeWeight2() -> Nothing:
Begin
	
	Define Int answer
	Define Vertex z
	Let v be 5

	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If v = e1's weight :
  	Begin
    	Let z's Int be v
    	break
  	End

	End
	
	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If not { v = e1's weight }:
  	Begin
    	Let answer be e1's weight
  	End

	End
  
	return Nothing

End

Function edgeWeight3() -> Nothing:
Begin
	
	Define Int answer
	Define Vertex z
	Let v be 5

	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If v = e1's weight :
  	Begin
    	Let z's Int be v
    	break
  	End

	End
	
	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If not { v = e1's weight }:
  	Begin
    	Let answer be e1's weight
  	End

	End
  
	return Nothing

End

Function edgeWeight4() -> Nothing:
Begin
	
	Define Int answer
	Define Vertex z
	Let v be 5

	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If v = e1's weight :
  	Begin
    	Let z's Int be v
    	break
  	End

	End
	
	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If not { v = e1's weight }:
  	Begin
    	Let answer be e1's weight
  	End

	End
  
	return Nothing

End

Function edgeWeight5() -> Nothing:
Begin
	
	Define Int answer
	Define Vertex z
	Let v be 5

	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If v = e1's weight :
  	Begin
    	Let z's Int be v
    	break
  	End

	End
	
	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If not { v = e1's weight }:
  	Begin
    	Let answer be e1's weight
  	End

	End
  
	return Nothing

End

Function edgeWeight6() -> Nothing:
Begin
	
	Define Int answer
	Define Vertex z
	Let v be 5

	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If v = e1's weight :
  	Begin
    	Let z's Int be v
    	break
  	End

	End
	
	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If not { v = e1's weight }:
  	Begin
    	Let answer be e1's weight
  	End

	End
  
	return Nothing

End

Function edgeWeight7() -> Nothing:
Begin
	
	Define Int answer
	Define Vertex z
	Let v be 5

	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If v = e1's weight :
  	Begin
    	Let z's Int be v
    	break
  	End

	End
	
	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If not { v = e1's weight }:
  	Begin
    	Let answer be e1's weight
  	End

	End
  
	return Nothing

End

Function edgeWeight8() -> Nothing:
Begin
	
	Define Int answer
	Define Vertex z
	Let v be 5

	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If v = e1's weight :
  	Begin
    	Let z's Int be v
    	break
  	End

	End
	
	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If not { v = e1's weight }:
  	Begin
    	Let answer be e1's weight
  	End

	End
  
	return Nothing

End

Function edgeWeight9() -> Nothing:
Begin
	
	Define Int answer
	Define Vertex z
	Let v be 5

	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If v = e1's weight :
  	Begin
    	Let z's Int be v
    	break
  	End

	End
	
	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If not { v = e1's weight }:
  	Begin
    	Let answer be e1's weight
  	End

	End
  
	return Nothing

End

Function edgeWeight10() -> Nothing:
Begin
	
	Define Int answer
	Define Vertex z
	Let v be 5

	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If v = e1's weight :
  	Begin
    	Let z's Int be v
    	break
  	End

	End
	
	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If not { v = e1's weight }:
  	Begin
    	Let answer be e1's weight
  	End

	End
  
	return Nothing

End

Function edgeWeight11() -> Nothing:
Begin
	
	Define Int answer
	Define Vertex z
	Let v be 5

	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If v = e1's weight :
  	Begin
    	Let z's Int be v
    	break
  	End

	End
	
	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If not { v = e1's weight }:
  	Begin
    	Let answer be e1's weight
  	End

	End
  
	return Nothing

End

Function edgeWeight12() -> Nothing:
Begin
	
	Define Int answer
	Define Vertex z
	Let v be 5

	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If v = e1's weight :
  	Begin
    	Let z's Int be v
    	break
  	End

	End
	
	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If not { v = e1's weight }:
  	Begin
    	Let answer be e1's weight
  	End

	End
  
	return Nothing

End

Function edgeWeight13() -> Nothing:
Begin
	
	Define Int answer
	Define Vertex z
	Let v be 5

	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If v = e1's weight :
  	Begin
    	Let z's Int be v
    	break
  	End

	End
	
	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If not { v = e1's weight }:
  	Begin
    	Let answer be e1's weight
  	End

	End
  
	return Nothing

End

Function edgeWeight14() -> Nothing:
Begin
	
	Define Int answer
	Define Vertex z
	Let v be 5

	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If v = e1's weight :
  	Begin
    	Let z's Int be v
    	break
  	End

	End
	
	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If not { v = e1's weight }:
  	Begin
    	Let answer be e1's weight
  	End

	End
  
	return Nothing

End

Function edgeWeight15() -> Nothing:
Begin
	
	Define Int answer
	Define Vertex z
	Let v be 5

	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If v = e1's weight :
  	Begin
    	Let z's Int be v
    	break
  	End

	End
	
	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If not { v = e1's weight }:
  	Begin
    	Let answer be e1's weight
  	End

	End
  
	return Nothing

End

Function edgeWeight16() -> Nothing:
Begin
	
	Define Int answer
	Define Vertex z
	Let v be 5

	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If v = e1's weight :
  	Begin
    	Let z's Int be v
    	break
  	End

	End
	
	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If not { v = e1's weight }:
  	Begin
    	Let answer be e1's weight
  	End

	End
  
	return Nothing

End

Function edgeWeight17() -> Nothing:
Begin
	
	Define Int answer
	Define Vertex z
	Let v be 5

	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If v = e1's weight :
  	Begin
    	Let z's Int be v
    	break
  	End

	End
	
	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If not { v = e1's weight }:
  	Begin
    	Let answer be e1's weight
  	End

	End
  
	return Nothing

End

Function edgeWeight18() -> Nothing:
Begin
	
	Define Int answer
	Define Vertex z
	Let v be 5

	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If v = e1's weight :
  	Begin
    	Let z's Int be v
    	break
  	End

	End
	
	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If not { v = e1's weight }:
  	Begin
    	Let answer be e1's weight
  	End

	End
  
	return Nothing

End

Function edgeWeight19() -> Nothing:
Begin
	
	Define Int answer
	Define Vertex z
	Let v be 5

	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If v = e1's weight :
  	Begin
    	Let z's Int be v
    	break
  	End

	End
	
	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If not { v = e1's weight }:
  	Begin
    	Let answer be e1's weight
  	End

	End
  
	return Nothing

End

Function edgeWeight20() -> Nothing:
Begin
	
	Define Int answer
	Define Vertex z
	Let v be 5

	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If v = e1's weight :
  	Begin
    	Let z's Int be v
    	break
  	End

	End
	
	For u in T adjacent to T's root:
	Begin
  	Let e1 be [u, T's root]

  	If not { v = e1's weight }:
  	Begin
    	Let answer be e1's weight
  	End

	End
  
	return Nothing

End

